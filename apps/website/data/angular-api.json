{
  "ClrAccordion": {
    "bindings": [
      {
        "name": "clrAccordionMultiPanel",
        "accepts": "boolean",
        "type": "input",
        "options": "true, false",
        "description": "If true allows multiple panels to be open at the same time.",
        "default": false
      }
    ]
  },
  "ClrAccordionPanel": {
    "bindings": [
      {
        "name": "clrAccordionPanelDisabled",
        "accepts": "boolean",
        "type": "input",
        "options": "true, false",
        "description": "When true this disables click events from opening/closing the panel.",
        "default": false
      },
      {
        "name": "clrAccordionPanelOpen",
        "accepts": "boolean",
        "type": "two-way",
        "options": "",
        "description": "Use this to set the open or closed state of the panel. it emits the open (true)/ closed (false) state of the panel",
        "default": false
      }
    ],
    "methods": [
      {
        "name": "togglePanel",
        "parameters": [],
        "description": "Opens and close the panel.",
        "returns": "void"
      },
      {
        "name": "getPanelStateClasses",
        "parameters": [
          {
            "name": "panel",
            "type": "AccordionPanelModel",
            "description": "A panel of the accordion."
          }
        ],
        "description": "Public accessor used by the template",
        "returns": "void"
      },
      {
        "name": "getAccordionContentId",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "description": "Create a specific id for the panel content."
          }
        ],
        "description": "Public accessor used by the template",
        "returns": "string"
      },
      {
        "name": "getAccordionHeaderId",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "description": "Create a specific id for the panel header."
          }
        ],
        "description": "Public accessor used by the template",
        "returns": "string"
      }
    ]
  },
  "ClrAccordionTitle": {
    "bindings": [
      {
        "name": "",
        "accepts": "",
        "type": "",
        "options": "",
        "description": "",
        "default": 0
      }
    ]
  },
  "ClrAlerts": {
    "bindings": [
      {
        "name": "clrCurrentAlertIndex",
        "accepts": "number",
        "type": "two-way",
        "options": "0, 1, 2, 3...",
        "description": "Sets the current index of alerts in a list",
        "default": 0
      },
      {
        "name": "clrCurrentAlert",
        "accepts": "ClrAlert",
        "type": "two-way",
        "options": "instance of ClrAlert",
        "description": "Provides the currently activated ClrAlert instance",
        "default": "any"
      }
    ]
  },
  "ClrAlert": {
    "bindings": [
      {
        "name": "clrAlertClosable",
        "accepts": "boolean",
        "type": "input",
        "options": "true, false",
        "description": "If false, the alert will not be closable by clicking on the top-right \"x\".",
        "default": true
      },
      {
        "name": "clrAlertClosed",
        "accepts": "boolean",
        "type": "two-way",
        "options": "true, false",
        "description": "Two-way binding on the state of the alert: opened or closed.",
        "default": false
      },
      {
        "name": "clrAlertType",
        "accepts": "string",
        "type": "input",
        "options": "info, warning, success, danger",
        "description": "Sets the type of the alert",
        "default": "info"
      },
      {
        "name": "clrAlertSizeSmall",
        "accepts": "boolean",
        "type": "input",
        "options": "true, false",
        "description": "Change the size to a small alert",
        "default": "false"
      },
      {
        "name": "clrAlertIcon",
        "accepts": "string",
        "type": "input",
        "options": "any icon shape",
        "description": "Allows you to customize the alert icon using any icon shape name",
        "default": "varies"
      },
      {
        "name": "clrAlertAppLevel",
        "accepts": "boolean",
        "type": "input",
        "options": "true, false",
        "description": "Changes the alert to be app level at the top of the page",
        "default": "false"
      }
    ]
  },
  "ClrAlertItem": {
    "css": [
      {
        "name": ".alert-text",
        "description": "Defines the text that is placed into the alert",
        "host": "div, span",
        "required": true
      },
      {
        "name": ".alert-actions",
        "description": "Defines any action buttons or dropdowns for an alert",
        "host": "div, span",
        "required": false
      },
      {
        "name": ".alert-action",
        "description": "Defines a button or dropdown to be styled for inside of an alert",
        "host": "button, clr-dropdown",
        "required": true
      }
    ]
  },
  "ClrAppLayout": {
    "bindings": [],
    "methods": [],
    "css": [
      {
        "name": ".main-container",
        "description": "A vertical flexbox that wraps app level alerts, a .header element, an optional .subnav element and a .content-container.",
        "host": "div",
        "required": "yes",
        "type": "layout"
      },
      {
        "name": ".content-container",
        "description": "A layout container. It can container an optional .sidenav element and a required .content-area container.",
        "host": "div",
        "required": "yes",
        "type": "layout"
      },
      {
        "name": ".content-area",
        "description": "A container for page specific application content.",
        "host": "div",
        "required": "yes",
        "type": "layout"
      }
    ]
  },
  "ClrBadge": {
    "comment": "THis is a placeholder for the badge css api data.",
    "bindings": [],
    "methods": [],
    "css": [
      {
        "name": ".badge",
        "description": "Set the base badge style.",
        "host": "span",
        "required": true,
        "type": "base"
      },
      {
        "name": ".badge-purple",
        "description": "Add the Clarity purple color.",
        "host": "span",
        "required": "no",
        "type": "color"
      },
      {
        "name": ".badge-blue",
        "description": "Add the Clarity blue color.",
        "host": "span",
        "required": "no",
        "type": "color"
      },
      {
        "name": ".badge-orange",
        "description": "Add the Clarity orange color.",
        "host": "span",
        "required": "no",
        "type": "color"
      },

      {
        "name": ".badge-light-blue",
        "description": "Add the Clarity light blue color.",
        "host": "span",
        "required": "no",
        "type": "color"
      },
      {
        "name": ".badge-1",
        "description": "Add the Clarity gray color.",
        "host": "span",
        "required": "no",
        "type": "color"
      },
      {
        "name": ".badge-2",
        "description": "Add the Clarity purple color.",
        "host": "span",
        "required": "no",
        "type": "color"
      },
      {
        "name": ".badge-3",
        "description": "Add the Clarity blue color.",
        "host": "span",
        "required": "no",
        "type": "color"
      },
      {
        "name": ".badge-4",
        "description": "Add the Clarity orange color.",
        "host": "span",
        "required": "no",
        "type": "color"
      },
      {
        "name": ".badge-5",
        "description": "Add the Clarity light blue color.",
        "host": "span",
        "required": "no",
        "type": "color"
      },
      {
        "name": ".badge-info",
        "description": "Add the Clarity info color.",
        "host": "span",
        "required": "no",
        "type": "color"
      },
      {
        "name": ".badge-success",
        "description": "Add the Clarity success color.",
        "host": "span",
        "required": "no",
        "type": "color"
      },
      {
        "name": ".badge-warning",
        "description": "Add the Clarity warning color.",
        "host": "span",
        "required": "no",
        "type": "color"
      },
      {
        "name": ".badge-danger",
        "description": "Add the Clarity danger color.",
        "host": "span",
        "required": "no",
        "type": "color"
      }
    ]
  },
  "ClrButton": {
    "bindings": [
      {
        "name": "clrInMenu",
        "accepts": "boolean",
        "type": "input",
        "options": "",
        "description": "Designate a button for display in the overflow menu.",
        "default": "false"
      },
      {
        "name": "class",
        "accepts": "string",
        "type": "input",
        "options": "'class1 class2",
        "description": "A string of space delimited names that is used on the button element.",
        "default": "none"
      },
      {
        "name": "name",
        "accepts": "string",
        "type": "input",
        "options": "btnName",
        "description": "Assign the button element a name",
        "default": "none"
      },
      {
        "name": "type",
        "accepts": "string",
        "type": "input",
        "options": "e.g 'submit'",
        "description": "Set the type of button for screen readers.",
        "default": "none"
      },
      {
        "name": "id",
        "accepts": "string",
        "type": "input",
        "options": "n/a",
        "description": "Set the id for the button element.",
        "default": "none"
      },
      {
        "name": "disabled",
        "accepts": "boolean",
        "type": "input",
        "options": "n/a",
        "description": "Set the disabled attribute for the button element.",
        "default": "false"
      },
      {
        "name": "click",
        "accepts": "Event",
        "type": "output",
        "options": "n/a",
        "description": "Listen for the user generated click events..",
        "default": "none"
      }
    ],
    "methods": [],
    "css": [
      {
        "name": ".btn",
        "description": "Base button class, defaults to primary colored outline button.",
        "host": "button",
        "required": "yes",
        "type": "base"
      },
      {
        "name": ".btn-primary",
        "description": "Solid button with primary color.",
        "host": "button",
        "required": "no",
        "type": "color"
      },
      {
        "name": ".btn-success",
        "description": "Solid button with success color.",
        "host": "button",
        "required": "no",
        "type": "color"
      },
      {
        "name": ".btn-warning",
        "description": "Solid button with warning color.",
        "host": "button",
        "required": "no",
        "type": "color"
      },
      {
        "name": ".btn-warning",
        "description": "Solid button with danger color.",
        "host": "button",
        "required": "no",
        "type": "color"
      },
      {
        "name": ".btn-outline",
        "description": "Outline button with primary color.",
        "host": "button",
        "required": "no",
        "type": "color"
      },
      {
        "name": ".btn-success-outline",
        "description": "Outline button with success color.",
        "host": "button",
        "required": "no",
        "type": "color"
      },
      {
        "name": ".btn-info-outline",
        "description": "Outline button with primary color.",
        "host": "button",
        "required": "no",
        "type": "color"
      },
      {
        "name": ".btn-warning-outline",
        "description": "Outline button with warning color",
        "host": "button",
        "required": "no",
        "type": "color"
      },
      {
        "name": ".btn-danger-outline",
        "description": "Outline button with danger color.",
        "host": "button",
        "required": "no",
        "type": "color"
      },
      {
        "name": ".btn-link",
        "description": "Flat button with primary color.",
        "host": "button",
        "required": "no",
        "type": "color"
      },
      {
        "name": ".btn-inverse",
        "description": "Add to make an inverse colored outline button.",
        "host": "button",
        "required": "no",
        "type": "color"
      },
      {
        "name": ".btn-sm",
        "description": "Add to make a small button size.",
        "host": "button",
        "required": "no",
        "type": "size"
      },
      {
        "name": ".btn-block",
        "description": "Add to make a block level button element.",
        "host": "button",
        "required": "no",
        "type": "size"
      },
      {
        "name": ".btn-icon",
        "description": "Creates a button sized to fit an cds-icon element.",
        "host": "button",
        "required": "no",
        "type": "size"
      }
    ]
  },
  "ClrButtonGroup": {
    "bindings": [
      {
        "name": "clrMenuPosition",
        "accepts": "string",
        "type": "input",
        "options": "top-right, top-left, bottom-right, bottom-left, right-top, right-bottom, left-top, left-bottom",
        "description": "Set the position of the overflow menu when it is open.",
        "default": "bottom-left"
      }
    ],
    "methods": [],
    "css": []
  },
  "ClrCard": {
    "bindings": [],
    "methods": [],
    "css": [
      {
        "name": ".card",
        "description": "Parent container of card elements.",
        "host": "div",
        "required": "yes",
        "type": "layout"
      },
      {
        "name": ".card-header",
        "description": "Child element of .card for header content",
        "host": "div",
        "required": "no",
        "type": "layout"
      },
      {
        "name": ".card-block",
        "description": "Child element of .card for header content",
        "host": "div",
        "required": "no",
        "type": "layout"
      },
      {
        "name": ".card-footer",
        "description": "Child element of .card for footer content",
        "host": "div",
        "required": "no",
        "type": "layout"
      },
      {
        "name": ".clickable",
        "description": "Adds (css only) visual and mouse treatments that indicate clickability. Must be paired with .card class.",
        "host": "div",
        "required": "no",
        "type": "feature"
      },
      {
        "name": ".card-img",
        "description": "Elements with .card-img can be places anywhere in the card or it can occupy the entire card.",
        "host": "div",
        "required": "no",
        "type": "layout"
      },
      {
        "name": ".card-media-block",
        "description": "Container for a media block group of elements - image, description (title & text).",
        "host": "div",
        "required": "no",
        "type": "layout"
      },
      {
        "name": "wrap",
        "description": "Paired with the .card-media-block class it moves the .card-media-description container below the image.",
        "host": "div",
        "required": "no",
        "type": "layout"
      },
      {
        "name": ".card-media-image",
        "description": "Child element of .card-media-block for sizing and positioning images.",
        "host": "div",
        "required": "yes for .card-media-block containers",
        "type": "layout"
      },
      {
        "name": ".card-media-description",
        "description": "Child element of .card-media-block containing title and text children elements.",
        "host": "div",
        "required": "yes for .card-media-block containers",
        "type": "layout"
      },
      {
        "name": ".card-media-title",
        "description": "Child element of .card-media-description.",
        "host": "div",
        "required": "yes for .card-media-block containers",
        "type": "content"
      },
      {
        "name": ".card-media-text",
        "description": "Child element of .card-media-description.",
        "host": "div",
        "required": "yes for .card-media-block containers",
        "type": "content"
      },
      {
        "name": ".card-text",
        "description": "Child element of the .card-block.",
        "host": "div",
        "required": "no",
        "type": "content"
      },
      {
        "name": "",
        "description": "",
        "host": "",
        "required": "",
        "type": ""
      }
    ]
  },
  "ClrCheckboxContainer": {
    "bindings": [
      {
        "name": "clrInline",
        "accepts": "boolean | string",
        "type": "input",
        "options": "true, false",
        "description": "Place the controls inline with the ability to wrap when there is not enough space.",
        "default": "false"
      }
    ],
    "methods": [],
    "css": []
  },
  "ClrCheckboxWrapper": {
    "bindings": [
      {
        "name": "",
        "accepts": "",
        "type": "",
        "options": "",
        "description": "",
        "default": 0
      }
    ],
    "methods": [
      {
        "name": "",
        "parameters": [],
        "description": "",
        "returns": ""
      }
    ],
    "css": [
      {
        "name": ".alert-text",
        "description": "Defines the text that is placed into the alert",
        "host": "div, span",
        "required": true
      }
    ]
  },
  "ClrCheckbox": {
    "bindings": [
      {
        "name": "clrInline",
        "accepts": "string",
        "type": "input",
        "options": "horizontal, vertical",
        "description": "Set the the (checkboxes or radios) orientation.",
        "default": "horizontal"
      }
    ],
    "methods": [
      {
        "name": "",
        "parameters": [],
        "description": "",
        "returns": ""
      }
    ],
    "css": []
  },
  "ClrControl": {
    "bindings": [],
    "methods": [],
    "css": []
  },
  "ClrControlContainer": {
    "bindings": [
      {
        "name": "",
        "accepts": "",
        "type": "",
        "options": "",
        "description": "",
        "default": 0
      }
    ],
    "methods": [
      {
        "name": "",
        "parameters": [],
        "description": "",
        "returns": ""
      }
    ],
    "css": [
      {
        "name": ".alert-text",
        "description": "Defines the text that is placed into the alert",
        "host": "div, span",
        "required": true
      }
    ]
  },
  "ClrControlError": {
    "bindings": [
      {
        "name": "",
        "accepts": "",
        "type": "",
        "options": "",
        "description": "",
        "default": 0
      }
    ],
    "methods": [
      {
        "name": "",
        "parameters": [],
        "description": "",
        "returns": ""
      }
    ],
    "css": [
      {
        "name": ".alert-text",
        "description": "Defines the text that is placed into the alert",
        "host": "div, span",
        "required": true
      }
    ]
  },
  "ClrControlHelper": {
    "bindings": [
      {
        "name": "",
        "accepts": "",
        "type": "",
        "options": "",
        "description": "",
        "default": 0
      }
    ],
    "methods": [
      {
        "name": "",
        "parameters": [],
        "description": "",
        "returns": ""
      }
    ],
    "css": [
      {
        "name": ".alert-text",
        "description": "Defines the text that is placed into the alert",
        "host": "div, span",
        "required": true
      }
    ]
  },
  "ClrCombobox": {
    "bindings": [
      {
        "name": "clrMulti",
        "accepts": "boolean",
        "type": "input",
        "options": "true, false",
        "description": "Enable multiple selection mode for a combobox.",
        "default": false
      },
      {
        "name": "clrInputChange",
        "accepts": "string",
        "type": "output",
        "options": "",
        "description": "Output event that emits the user entered search text..",
        "default": ""
      },
      {
        "name": "clrOpenChange",
        "accepts": "boolean",
        "type": "output",
        "options": "",
        "description": "Output event that emits boolean state when combox is opened or closed. .",
        "default": ""
      }
    ],
    "methods": [],
    "css": []
  },
  "ClrComboboxContainer": {
    "bindings": [],
    "methods": [],
    "css": []
  },
  "ClrDatagrid": {
    "bindings": [
      {
        "name": "clrDgLoading",
        "accepts": "boolean",
        "type": "input",
        "options": "true, false",
        "description": "When this is true the datagrid will have an overlay that blocks user interaction and shows a <clr-spinner> that indicates activity associated with retrieving data from a server.",
        "default": "false"
      },
      {
        "name": "clrDgRefresh",
        "accepts": "ClrDatagridStateInterface<T>",
        "type": "output",
        "options": "n/a",
        "description": "The state object reflecting the page metadata (to, from size & current) and current sorting and filters applied to the data models.",
        "default": "none"
      },
      {
        "name": "clrDgSelected",
        "accepts": "array: T[]",
        "type": "two-way",
        "options": "n/a",
        "description": "An array of all datagrid items that are selected.",
        "default": "none"
      },
      {
        "name": "clrDgSingleSelected",
        "accepts": "item: T",
        "type": "two-way",
        "options": "n/a",
        "description": "The single item selected for a datagrid.",
        "default": "none"
      },
      {
        "name": "clrDgSingleSelectionAriaLabel",
        "accepts": "string",
        "type": "input",
        "options": "n/a",
        "description": "aria-label for the single select column header.",
        "default": "Single selection header"
      },
      {
        "name": "clrDgSingleActionableAriaLabel",
        "accepts": "string",
        "type": "input",
        "options": "n/a",
        "description": "aria-label for the single action column header.",
        "default": "Single actionable header"
      },
      {
        "name": "clrDetailExpandableAriaLabel",
        "accepts": "string",
        "type": "input",
        "options": "n/a",
        "description": "aria-label for the expandable row column header.",
        "default": "Toggle more row content"
      },
      {
        "name": "clrDgPreserveSelection",
        "accepts": "boolean",
        "type": "input",
        "options": "n/a",
        "description": "Preserve datagrid selections after filtering has occurred on the dataset.",
        "default": "false"
      }
    ],
    "methods": [
      {
        "name": "dataChanged",
        "parameters": [],
        "description": "Re-trigger the computation of displayed items manually. (cell width and datagrid height)",
        "returns": "void"
      },
      {
        "name": "allSelected",
        "parameters": [],
        "description": "Determine if all displayed items are selected. (getter)",
        "returns": "boolean"
      },
      {
        "name": "allSelected",
        "parameters": [
          {
            "name": "value",
            "type": "boolean",
            "description": "True will select all items."
          }
        ],
        "description": "Select/deselect all currently displayed items. (setter)",
        "returns": "void"
      },
      {
        "name": "resize",
        "parameters": [],
        "description": "Re-render the datagrid content.",
        "returns": "void"
      }
    ],
    "css": []
  },
  "ClrDatagridActionBar": {
    "bindings": [
      {
        "name": "",
        "accepts": "",
        "type": "",
        "options": "",
        "description": "",
        "default": 0
      }
    ],
    "methods": [
      {
        "name": "",
        "parameters": [],
        "description": "",
        "returns": ""
      }
    ],
    "css": [
      {
        "name": ".alert-text",
        "description": "Defines the text that is placed into the alert",
        "host": "div, span",
        "required": true
      }
    ]
  },
  "ClrDatagridActionOverflow": {
    "bindings": [
      {
        "name": "clrDgActionOverflowOpen",
        "accepts": "boolean",
        "type": "two-way",
        "options": "true, false",
        "description": "Two way binding for the open/close state of an action overflow menu.",
        "default": false
      }
    ],
    "methods": [],
    "css": [
      {
        "name": ".alert-text",
        "description": "Defines the text that is placed into the alert",
        "host": "div, span",
        "required": true
      }
    ]
  },
  "ClrDatagridCell": {
    "bindings": [
      {
        "name": "",
        "accepts": "",
        "type": "",
        "options": "",
        "description": "",
        "default": 0
      }
    ],
    "methods": [
      {
        "name": "",
        "parameters": [],
        "description": "",
        "returns": ""
      }
    ],
    "css": [
      {
        "name": ".alert-text",
        "description": "Defines the text that is placed into the alert",
        "host": "div, span",
        "required": true
      }
    ]
  },
  "ClrDatagridColumn": {
    "bindings": [
      {
        "name": "clrDgColType",
        "accepts": "string",
        "type": "input",
        "options": "'string' OR 'number'",
        "description": "Specify the built in filter type for a column.",
        "default": "string"
      },
      {
        "name": "clrDgField",
        "accepts": "string",
        "type": "input",
        "options": "n/a",
        "description": "The object property name that will be used for sorting and filtering in Datagrids that implement the *clrDgItem iterator.",
        "default": "n/a"
      },
      {
        "name": "clrDgSortBy",
        "accepts": "ClrDatagridComparatorInterface",
        "type": "input",
        "options": "ClrDatagridComparatorInterface",
        "description": "A custom comparator supplied by the consuming application.",
        "default": "n/a"
      },
      {
        "name": "clrDgSortOrder",
        "accepts": "ClrDatagridSortOrder",
        "type": "two-way",
        "options": "UNSORTED (0), ASC (1), DESC (-1)",
        "description": "Sets or updates the sorted state of a column.",
        "default": "UNSORTED (0)"
      },
      {
        "name": "clrFilterValue",
        "accepts": "string",
        "type": "two-way",
        "options": "any",
        "description": "Sets or updates the filtered state of a column.",
        "default": "no filter applied"
      },
      {
        "name": "clrDgColumnResize",
        "accepts": "n/a",
        "type": "output",
        "options": "n/a",
        "description": "Output that emits the width (in px) after a column has been re-sized.",
        "default": "n/a"
      }
    ],
    "methods": [
      {
        "name": "",
        "parameters": [],
        "description": "",
        "returns": ""
      }
    ],
    "css": [
      {
        "name": ".alert-text",
        "description": "Defines the text that is placed into the alert",
        "host": "div, span",
        "required": true
      }
    ]
  },
  "ClrDatagridComparatorInterface": {
    "bindings": [
      {
        "name": "",
        "accepts": "",
        "type": "",
        "options": "",
        "description": "",
        "default": 0
      }
    ],
    "methods": [
      {
        "name": "",
        "parameters": [],
        "description": "",
        "returns": ""
      }
    ],
    "css": [
      {
        "name": ".alert-text",
        "description": "Defines the text that is placed into the alert",
        "host": "div, span",
        "required": true
      }
    ],
    "interface": [
      {
        "property": "compare(a: T, b: T)",
        "type": "Function",
        "description": "The comparator function that sorts Item models."
      }
    ]
  },
  "ClrDatagridDetail": {
    "bindings": [
      {
        "name": "",
        "accepts": "",
        "type": "",
        "options": "",
        "description": "",
        "default": 0
      }
    ],
    "methods": [
      {
        "name": "",
        "parameters": [],
        "description": "",
        "returns": ""
      }
    ],
    "css": [
      {
        "name": ".class-name",
        "description": "css class description",
        "host": "div, span",
        "required": true
      }
    ]
  },
  "ClrDatagridFilter": {
    "bindings": [
      {
        "name": "clrDgFilter",
        "accepts": "ClrDatagridFilterInterface<T>",
        "type": "input",
        "options": "n/a",
        "description": "Bind a custom filter that implements the ClrDatagridFilterInterface<T> to a column.",
        "default": 0
      },
      {
        "name": "clrDgFilterOpen",
        "accepts": "boolean",
        "type": "two-way",
        "options": "true, false",
        "description": "Two way binding for the open state of a column filter.",
        "default": "false"
      }
    ],
    "methods": [
      {
        "name": "active",
        "parameters": [],
        "description": "Indication for the active state of a column filter.",
        "returns": "boolean"
      }
    ],
    "css": [
      {
        "name": ".alert-text",
        "description": "Defines the text that is placed into the alert",
        "host": "div, span",
        "required": true
      }
    ]
  },
  "ClrDatagridHideableColumn": {
    "bindings": [
      {
        "name": "clrDgHideableColumn",
        "accepts": "{ hidden: boolean }",
        "type": "input",
        "options": "{ hidden: true }, { hidden: false }",
        "description": "Declares the column as hidable and optionally sets the initial hidden state.",
        "default": "{ hidden: false }"
      },
      {
        "name": "clrDgHidden",
        "accepts": "boolean",
        "type": "two-way",
        "options": "true, false",
        "description": "An alternative, two way binding for setting the hidden state or responding to changes when hidden state is emitted.",
        "default": "false"
      }
    ],
    "methods": [
      {
        "name": "",
        "parameters": [],
        "description": "",
        "returns": ""
      }
    ],
    "css": [
      {
        "name": ".alert-text",
        "description": "Defines the text that is placed into the alert",
        "host": "div, span",
        "required": true
      }
    ]
  },
  "ClrDatagridItems": {
    "bindings": [
      {
        "name": "clrDgItems",
        "accepts": "[Items]",
        "type": "input",
        "options": "[Items]",
        "description": "Structural directive that accepts a list of Items<T> for the datagrid to operate over.",
        "default": "n/a"
      },
      {
        "name": "TrackByFunction",
        "accepts": "TrackByFunction<T>",
        "type": "input",
        "options": "TrackByFunction<T>",
        "description": "Optional trackby function (similar to *ngFor: trackBy).",
        "default": "n/a"
      }
    ],
    "methods": [
      {
        "name": "",
        "parameters": [],
        "description": "",
        "returns": ""
      }
    ],
    "css": [
      {
        "name": ".alert-text",
        "description": "Defines the text that is placed into the alert",
        "host": "div, span",
        "required": true
      }
    ]
  },
  "ClrDatagridPagination": {
    "bindings": [
      {
        "name": "clrDgPageInputDisabled",
        "accepts": "boolean",
        "type": "input",
        "options": "true, false",
        "description": "Turn on/off the users ability to interact with pagination controls.",
        "default": "false"
      },
      {
        "name": "clrDgPageSize",
        "accepts": "number",
        "type": "input",
        "options": "positive integers",
        "description": "Set the number of items per page.",
        "default": "0 (no pagination)"
      },
      {
        "name": "clrDgTotalItems",
        "accepts": "number",
        "type": "input",
        "options": "positive integers",
        "description": "Set the total number if items in the data set.",
        "default": "0"
      },
      {
        "name": "clrDgLastPage",
        "accepts": "number",
        "type": "input",
        "options": "positive integers",
        "description": "Set the last page (e.g for back navigation in the browser).",
        "default": "1"
      },
      {
        "name": "clrDgPage",
        "accepts": "number",
        "type": "two-way",
        "options": "positive integers",
        "description": "Two way binding for the current page in the dataset.",
        "default": "1"
      }
    ],
    "methods": [
      {
        "name": "",
        "parameters": [],
        "description": "",
        "returns": ""
      }
    ],
    "css": [
      {
        "name": ".alert-text",
        "description": "Defines the text that is placed into the alert",
        "host": "div, span",
        "required": true
      }
    ]
  },
  "ClrDatagridPageSize": {
    "bindings": [
      {
        "name": "clrPageSizeOptions",
        "accepts": "number[]",
        "type": "input",
        "options": "number[]",
        "description": "Populates the user options for changing the page size.",
        "default": "clrDgPageSize"
      }
    ],
    "methods": [
      {
        "name": "",
        "parameters": [],
        "description": "",
        "returns": ""
      }
    ],
    "css": [
      {
        "name": ".alert-text",
        "description": "Defines the text that is placed into the alert",
        "host": "div, span",
        "required": true
      }
    ]
  },
  "ClrDatagridPlaceholder": {
    "bindings": [
      {
        "name": "",
        "accepts": "",
        "type": "",
        "options": "",
        "description": "",
        "default": 0
      }
    ],
    "methods": [
      {
        "name": "",
        "parameters": [],
        "description": "",
        "returns": ""
      }
    ],
    "css": [
      {
        "name": ".alert-text",
        "description": "Defines the text that is placed into the alert",
        "host": "div, span",
        "required": true
      }
    ]
  },
  "ClrDatagridRow": {
    "bindings": [
      {
        "name": "clrDgItem",
        "accepts": "item<T>",
        "type": "input",
        "options": "n/a",
        "description": "This is the Type for a row item. It sets the type for the datagrid and all of its children components. E.g filters, sorting etc.",
        "default": "n/a"
      },
      {
        "name": "clrDgSelected",
        "accepts": "boolean",
        "type": "two-way",
        "options": "true, false",
        "description": "Set the selected state of a row item.",
        "default": "false"
      },
      {
        "name": "clrDgSelectable",
        "accepts": "boolean",
        "type": "input",
        "options": "true, false",
        "description": "Turn on/off the ability of a row item to be selected.",
        "default": "true"
      },
      {
        "name": "clrDgDetailOpenLabel",
        "accepts": "string",
        "type": "input",
        "options": "n/a",
        "description": "Pass a string that will be used for the aria-label of the button that opens the detail pane.",
        "default": "ClrCommonStrings.open (Open)"
      },
      {
        "name": "clrDgDetailCloseLabel",
        "accepts": "string",
        "type": "input",
        "options": "n/a",
        "description": "Pass a string that will be used for the aria-label of the button that opens the detail pane.",
        "default": "ClrCommonStrings.close (Close)"
      }
    ],
    "methods": [
      {
        "name": "",
        "parameters": [],
        "description": "",
        "returns": ""
      }
    ],
    "css": [
      {
        "name": ".alert-text",
        "description": "Defines the text that is placed into the alert",
        "host": "div, span",
        "required": true
      }
    ]
  },
  "ClrDatagridStateInterface": {
    "bindings": [
      {
        "name": "",
        "accepts": "",
        "type": "",
        "options": "",
        "description": "",
        "default": 0
      }
    ],
    "methods": [
      {
        "name": "",
        "parameters": [],
        "description": "",
        "returns": ""
      }
    ],
    "css": [
      {
        "name": ".alert-text",
        "description": "Defines the text that is placed into the alert",
        "host": "div, span",
        "required": true
      }
    ],
    "interface": [
      {
        "property": "page?.from?",
        "propertyType": "number",
        "description": "The (optional) starting page number for the slice of data. "
      },
      {
        "property": "page?.to?",
        "propertyType": "number",
        "description": "The (optional) ending page number for the slice of data."
      },
      {
        "property": "page?.current?",
        "propertyType": "number",
        "description": "The page number for the current slice of model data."
      },
      {
        "property": "sort?.by",
        "propertyType": "string | ClrDatagridComparatorInterface<T>",
        "description": "DESC (-1), ASC (1), None (0) or a custom comparator used for sorting."
      },
      {
        "property": "sort?.reverse",
        "propertyType": "boolean",
        "description": "The opposite of the sorting applies to the models"
      },
      {
        "property": "filters",
        "propertyType": "any[]",
        "description": "An array of filters that implements ClrDatagridFilterInterface<T> that are applied to the data passed to the datagrid "
      }
    ]
  },
  "ClrDgFooter": {
    "bindings": [
      {
        "name": "",
        "accepts": "",
        "type": "",
        "options": "",
        "description": "",
        "default": 0
      }
    ],
    "methods": [
      {
        "name": "",
        "parameters": [],
        "description": "",
        "returns": ""
      }
    ],
    "css": [
      {
        "name": ".alert-text",
        "description": "Defines the text that is placed into the alert",
        "host": "div, span",
        "required": true
      }
    ]
  },
  "ClrDropdown": {
    "bindings": [
      {
        "name": "clrCloseMenuOnItemClick",
        "accepts": "boolean",
        "type": "input",
        "options": "true, false",
        "description": "When false the drop down is not closed if user clicks on menu items.",
        "default": true
      }
    ],
    "methods": [
      {
        "name": "",
        "parameters": [],
        "description": "",
        "returns": ""
      }
    ],
    "css": [
      {
        "name": ".alert-text",
        "description": "Defines the text that is placed into the alert",
        "host": "div, span",
        "required": true
      }
    ]
  },
  "ClrDropdownItem": {
    "bindings": [
      {
        "name": "clrDisabled",
        "accepts": "boolean",
        "type": "input",
        "options": "true, false",
        "description": "Set the disabled attribute on the host element.",
        "default": "null"
      },
      {
        "name": "id",
        "accepts": "string",
        "type": "input",
        "options": "any string",
        "description": "Allows a consumer supplied id to be set for the dropdown item host.",
        "default": "Clarity adds an auto-incremented id"
      }
    ],
    "methods": [
      {
        "name": "",
        "parameters": [],
        "description": "",
        "returns": ""
      }
    ],
    "css": []
  },
  "ClrDropdownMenu": {
    "bindings": [
      {
        "name": "clrPosition",
        "accepts": "string",
        "type": "input",
        "options": "top-left, top-right, right-top, right-bottom, bottom-right, bottom-left, left-bottom, left-top",
        "description": "Set the position orientation to the trigger anchor.",
        "default": "bottom-left"
      }
    ],
    "methods": [
      {
        "name": "",
        "parameters": [],
        "description": "",
        "returns": ""
      }
    ],
    "css": [
      {
        "name": ".dropdown-divider",
        "description": "Styles the div as a divider element in the menu.",
        "host": "div",
        "required": false
      },
      {
        "name": ".dropdown-header",
        "description": "Styles the header element in the menu",
        "host": "label",
        "required": false
      }
    ]
  },
  "ClrDropdownTrigger": {
    "bindings": [
      {
        "name": "",
        "accepts": "",
        "type": "",
        "options": "",
        "description": "",
        "default": 0
      }
    ],
    "methods": [
      {
        "name": "",
        "parameters": [],
        "description": "",
        "returns": ""
      }
    ],
    "css": [
      {
        "name": ".alert-text",
        "description": "Defines the text that is placed into the alert",
        "host": "div, span",
        "required": true
      }
    ]
  },
  "ClrForm": {
    "bindings": [
      {
        "name": "clrLabelSize",
        "accepts": "number",
        "type": "input",
        "options": "1,2,3,4...",
        "description": "Sets the label size in rem for an input. If they are set it must be minLabelSize <= clrLabelSize <= maxLabelSize.",
        "default": 2
      }
    ],
    "methods": [
      {
        "name": "",
        "parameters": [],
        "description": "",
        "returns": ""
      }
    ],
    "css": [
      {
        "name": ".alert-text",
        "description": "Defines the text that is placed into the alert",
        "host": "div, span",
        "required": true
      }
    ]
  },
  "ClrFormCommon": {
    "bindings": [
      {
        "name": "ngModel",
        "accepts": "model.property",
        "type": "two-way",
        "options": "model.property",
        "description": "From the Angular forms API.",
        "default": 0
      },
      {
        "name": "formControlName",
        "accepts": "string",
        "type": "input",
        "options": "any",
        "description": "From the Angular forms API.",
        "default": "n/a"
      },
      {
        "name": "disabled",
        "accepts": "boolean",
        "type": "input",
        "options": "true, false",
        "description": "From the Angular forms API.",
        "default": "null"
      },
      {
        "name": "name",
        "accepts": "string",
        "type": "input",
        "options": "Valid HTML name",
        "description": "From the Angular forms API.",
        "default": "null"
      },
      {
        "name": "validator",
        "accepts": "ValidatorFn",
        "type": "input",
        "options": "ValidatorFn",
        "description": "From the Angular forms API.",
        "default": null
      }
    ],
    "methods": [
      {
        "name": "",
        "parameters": [],
        "description": "",
        "returns": ""
      }
    ],
    "css": [
      {
        "name": ".alert-text",
        "description": "Defines the text that is placed into the alert",
        "host": "div, span",
        "required": true
      }
    ]
  },
  "ClrGrid": {
    "bindings": [],
    "methods": [],
    "css": [
      {
        "name": ".clr-col-{1..12}",
        "description": "For viewport width < 576px an extra small column that can span from 1 to 12 columns wide.",
        "host": "div",
        "required": "no",
        "type": "layout"
      },
      {
        "name": ".clr-col-sm-{1..12}",
        "description": "For viewport width >= 576px a small column that can span from 1 to 12 columns wide.",
        "host": "div",
        "required": "no",
        "type": "layout"
      },
      {
        "name": ".clr-col-md-{1..12}",
        "description": "For viewport width >= 768px a medium column that can span from 1 to 12 columns wide.",
        "host": "div",
        "required": "no",
        "type": "layout"
      },
      {
        "name": ".clr-col-lg-{1..12}",
        "description": "For viewport width >= 992px a large column that can span from 1 to 12 columns wide.",
        "host": "div",
        "required": "no",
        "type": "layout"
      },
      {
        "name": ".clr-col-xl-{1..12}",
        "description": "For viewport width >= 1200px an extra-large column that can span from 1 to 12 columns wide.",
        "host": "div",
        "required": "no",
        "type": "layout"
      },
      {
        "name": ".clr-row",
        "description": "A horizontal group of elements that add up to 12 columns.",
        "host": "div",
        "required": "no",
        "type": "layout"
      },
      {
        "name": ".clr-col",
        "description": "Automatically divides elements into equal width columns. Can be combined with .clr-col-## for automatic re-sizing.",
        "host": "div",
        "required": "no",
        "type": "layout"
      },
      {
        "name": "..clr-col-{1..12}-auto",
        "description": "Size the column based on the width of its content.",
        "host": "div",
        "required": "no",
        "type": "layout"
      },
      {
        "name": ".clr-row-break",
        "description": "Use this after a column to break the following columns onto a new line.",
        "host": "div",
        "required": "no",
        "type": "layout"
      },
      {
        "name": ".clr-offset-{sm, md, lg, xl}-{1..11}",
        "description": "Combine this with a column class (.clr-col-6) to increase the lolumns left margin by a specific number of columns.  ",
        "host": "div",
        "required": "no",
        "type": "layout"
      },
      {
        "name": ".clr-align-items-{1..12}-start",
        "description": "Combine with .clr-row to vertically align columns at the start of the row.",
        "host": "div",
        "required": "no",
        "type": "layout"
      },
      {
        "name": ".clr-align-items-{1..12}-center",
        "description": "Combine with .clr-row to vertically align columns at the center of the row.",
        "host": "div",
        "required": "no",
        "type": "layout"
      },
      {
        "name": ".clr-align-items-{1..12}-end",
        "description": "Combine with .clr-row to vertically align columns at the end of the row.",
        "host": "div",
        "required": "no",
        "type": "layout"
      },
      {
        "name": ".clr-align-self-{1..12}-start",
        "description": "Combine with any .clr-col-* class to vertically align the column at the start of the row.",
        "host": "div",
        "required": "no",
        "type": "layout"
      },
      {
        "name": ".clr-align-self-{1..12}-center",
        "description": "Combine with any .clr-col-* class to vertically align the column in the center of the row.",
        "host": "div",
        "required": "no",
        "type": "layout"
      },
      {
        "name": ".clr-align-self-{1..12}-end",
        "description": "Combine with any .clr-col-* class to vertically align the column at the end of the row.",
        "host": "div",
        "required": "no",
        "type": "layout"
      },
      {
        "name": ".clr-justify-content-start",
        "description": "Combine with .clr-row to horizontally align columns at the start of the row.",
        "host": "div",
        "required": "no",
        "type": "layout"
      },
      {
        "name": ".clr-justify-content-center",
        "description": "Combine with .clr-row to horizontally align columns in the center of the row.",
        "host": "div",
        "required": "no",
        "type": "layout"
      },
      {
        "name": ".clr-justify-content-enbd",
        "description": "Combine with .clr-row to horizontally align columns at the end of the row.",
        "host": "div",
        "required": "no",
        "type": "layout"
      },
      {
        "name": ".clr-justify-content-around",
        "description": "Combine with .clr-row to horizontally align columns with even space around all columns.",
        "host": "div",
        "required": "no",
        "type": "layout"
      },
      {
        "name": ".clr-justify-content-between",
        "description": "Combine with .clr-row to horizontally align columns with space between all columns from row start to row end.",
        "host": "div",
        "required": "no",
        "type": "layout"
      }
    ]
  },
  "ClrHeader": {
    "bindings": [],
    "methods": [],
    "css": [
      {
        "name": ".header-1",
        "description": "Sets the background color option for a header container.",
        "host": "div",
        "required": "yes",
        "type": "color+layout"
      },
      {
        "name": ".header-2",
        "description": "Sets the background color option for a header container.",
        "host": "div",
        "required": "yes",
        "type": "color+layout"
      },
      {
        "name": ".header-3",
        "description": "Sets the background color option for a header container.",
        "host": "div",
        "required": "yes",
        "type": "color+layout"
      },
      {
        "name": ".header-4",
        "description": "Sets the background color option for a header container.",
        "host": "div",
        "required": "yes",
        "type": "color+layout"
      },
      {
        "name": ".header-5",
        "description": "Sets the background color option for a header container.",
        "host": "div",
        "required": "yes",
        "type": "color+layout"
      },
      {
        "name": ".header-6",
        "description": "Sets the background color option for a header container.",
        "host": "div",
        "required": "yes",
        "type": "color+layout"
      },
      {
        "name": ".header-7",
        "description": "Sets the background color option for a header container.",
        "host": "div",
        "required": "yes",
        "type": "color+layout"
      },
      {
        "name": ".branding",
        "description": "Header child container element that containes application logo and title.",
        "host": "div",
        "required": "yes",
        "type": "layout"
      },
      {
        "name": ".header-nav",
        "description": "Header child container that contains primary navigation links.",
        "host": "div",
        "required": "yes",
        "type": "layout"
      },
      {
        "name": ".search",
        "description": "A form containing a search icon and search input field.",
        "host": "div",
        "required": "no",
        "type": "layout"
      },
      {
        "name": ".header-actions",
        "description": "Header child container that contains secondary navigation links.",
        "host": "div",
        "required": "no",
        "type": "layout"
      },
      {
        "name": ".subnav",
        "description": "A sibling element immediately following .header element. ",
        "host": "nav",
        "required": "no",
        "type": "layout"
      },
      {
        "name": ".nav",
        "description": "Used on an un-ordered list it lays out tab like nave links horizontally.",
        "host": "ul",
        "required": "yes",
        "type": "layout"
      },
      {
        "name": "nav-item",
        "description": "A list item that contains an anchor tag with the .nav-link class.",
        "host": "li",
        "required": "yes",
        "type": "layout"
      },
      {
        "name": ".nav-link",
        "description": "A presentation class that styles anchor elements for display in a .subnav container.",
        "host": "a",
        "required": "yes",
        "type": "content"
      }
    ]
  },
  "ClrIfActive": {
    "bindings": [
      {
        "name": "clrIfActive",
        "accepts": "boolean",
        "type": "two-way",
        "options": "true, false",
        "description": "Structural directive that enables lazy-loading.",
        "default": "false"
      }
    ],
    "methods": [],
    "css": []
  },
  "ClrIfDetail": {
    "bindings": [
      {
        "name": "clrIfDetail",
        "accepts": "Item<T>",
        "type": "two-way",
        "options": "Item<T>",
        "description": "Structural directive used to pass the item to the ClrDatagridDetail component.",
        "default": "n/a"
      }
    ],
    "methods": [
      {
        "name": "",
        "parameters": [],
        "description": "",
        "returns": ""
      }
    ],
    "css": [
      {
        "name": ".alert-text",
        "description": "Defines the text that is placed into the alert",
        "host": "div, span",
        "required": true
      }
    ]
  },
  "ClrIfError": {
    "bindings": [
      {
        "name": "",
        "accepts": "",
        "type": "",
        "options": "",
        "description": "",
        "default": 0
      }
    ],
    "methods": [
      {
        "name": "",
        "parameters": [],
        "description": "",
        "returns": ""
      }
    ],
    "css": [
      {
        "name": ".alert-text",
        "description": "Defines the text that is placed into the alert",
        "host": "div, span",
        "required": true
      }
    ]
  },
  "ClrIfExpanded": {
    "bindings": [
      {
        "name": "clrIfExpanded",
        "accepts": "boolean",
        "type": "two-way",
        "options": "true, false",
        "description": "Two way binding for the expanded/collapsed state of a ClrTreeNode.",
        "default": "false"
      }
    ]
  },
  "ClrIfOpen": {
    "bindings": [
      {
        "name": "clrIfOpen",
        "accepts": "boolean",
        "type": "two-way",
        "options": "true, false",
        "description": "Set the open / close state of element it is applied to.",
        "default": false
      }
    ],
    "methods": [],
    "css": []
  },
  "ClrLabel": {
    "bindings": [],
    "methods": [],
    "css": [
      {
        "name": ".label",
        "description": "Indicates this element is a label",
        "host": "span",
        "required": true
      },
      {
        "name": ".label-info",
        "description": "Sets the status to info",
        "host": "span",
        "required": false
      },
      {
        "name": ".label-success",
        "description": "Sets the status to success",
        "host": "span",
        "required": false
      },
      {
        "name": ".label-warning",
        "description": "Sets the status to warning",
        "host": "span",
        "required": false
      },
      {
        "name": ".label-danger",
        "description": "Sets the status to danger/error",
        "host": "span",
        "required": false
      },
      {
        "name": ".clickable",
        "description": "Indicates that the label is clickable",
        "host": "span",
        "required": false
      },
      {
        "name": ".label-blue",
        "description": "Colors the label blue",
        "host": "span",
        "required": false
      },
      {
        "name": ".label-orange",
        "description": "Colors the label orange",
        "host": "span",
        "required": false
      },
      {
        "name": ".label-light-blue",
        "description": "Colors the label light blue",
        "host": "span",
        "required": false
      }
    ]
  },
  "ClrList": {
    "bindings": [],
    "methods": [],
    "css": [
      {
        "name": ".list",
        "description": "Container element for list items.",
        "host": "ol, ul",
        "required": "yes",
        "type": "container"
      },
      {
        "name": ".list-unstyled",
        "description": "Remove all list style from list items.",
        "host": "ol, ul",
        "required": "yes",
        "type": "container"
      },
      {
        "name": ".compact",
        "description": "Combine with .list or .list-unstyled to reduce line space.",
        "host": "ol, ul",
        "required": "no",
        "type": "layout"
      }
    ]
  },
  "ClrLogin": {
    "bindings": [],
    "methods": [],
    "css": [
      {
        "name": ".login-wrapper",
        "description": "Container class for a login form.",
        "host": "div",
        "required": "yes",
        "type": "layout"
      },
      {
        "name": ".login",
        "description": "Style and layout class for the login form.",
        "host": "form",
        "required": "yes",
        "type": "layout, style"
      },
      {
        "name": ".title",
        "description": "Child element of .login for grouping welcome and hint text.",
        "host": "section",
        "required": "yes",
        "type": "content"
      },
      {
        "name": ".welcome",
        "description": "Child element of .title for welcome text.",
        "host": "h3",
        "required": "yes",
        "type": "content"
      },
      {
        "name": ".hint",
        "description": "Child element of .title for sub-title text",
        "host": "h5",
        "required": "yes",
        "type": "content"
      },
      {
        "name": ".login-group",
        "description": "Container element that organizes form controls.",
        "host": "div",
        "required": "yes",
        "type": "layout"
      }
    ]
  },
  "ClrMainContainer": {
    "bindings": [
      {
        "name": "",
        "accepts": "",
        "type": "",
        "options": "",
        "description": "",
        "default": 0
      }
    ],
    "methods": [
      {
        "name": "",
        "parameters": [],
        "description": "",
        "returns": ""
      }
    ],
    "css": [
      {
        "name": ".alert-text",
        "description": "Defines the text that is placed into the alert",
        "host": "div, span",
        "required": true
      }
    ]
  },
  "ClrModal": {
    "bindings": [
      {
        "name": "clrModalOpen",
        "accepts": "boolean",
        "type": "two-way",
        "options": "true, false",
        "description": "A two-way binding to the open / close state of the modal.",
        "default": "false"
      },
      {
        "name": "clrModalClosable",
        "accepts": "boolean",
        "type": "input",
        "options": "true, false",
        "description": "When false there is no user control button to close the modal.",
        "default": "true"
      },
      {
        "name": "clrModalSize",
        "accepts": "string",
        "type": "input",
        "options": "sm, <none>, lg, xl",
        "description": "Set the size of the modal.",
        "default": "<none> (medium size)"
      },
      {
        "name": "clrModalStaticBackdrop",
        "accepts": "boolean",
        "type": "input",
        "options": "true, false",
        "description": "When true the modal will not close if user clicks outside of the modal.",
        "default": "true"
      },
      {
        "name": "clrModalSkipAnimation",
        "accepts": "boolean",
        "type": "input",
        "options": "true, false",
        "description": "WHen true the modal will not animate opening and closing.",
        "default": "false"
      }
    ],
    "methods": [
      {
        "name": "open",
        "parameters": [],
        "description": "Open the modal with this method call.",
        "returns": "void"
      },
      {
        "name": "close",
        "parameters": [],
        "description": "Close the modal with this method call.",
        "returns": "void"
      }
    ],
    "css": [
      {
        "name": ".alert-text",
        "description": "Defines the text that is placed into the alert",
        "host": "div, span",
        "required": true
      }
    ]
  },
  "ClrModalBody": {
    "bindings": [
      {
        "name": "",
        "accepts": "",
        "type": "",
        "options": "",
        "description": "",
        "default": 0
      }
    ],
    "methods": [
      {
        "name": "",
        "parameters": [],
        "description": "",
        "returns": ""
      }
    ],
    "css": [
      {
        "name": ".alert-text",
        "description": "Defines the text that is placed into the alert",
        "host": "div, span",
        "required": true
      }
    ]
  },
  "ClrNavigation": {
    "bindings": [],
    "methods": [],
    "css": [
      {
        "name": ".main-container",
        "description": "Designate the root level application container. Automatically applied when using the clr-main-container directive.",
        "host": "div",
        "required": "yes",
        "type": "layout"
      },
      {
        "name": ".content-container",
        "description": "Designate a container for content and side navigation",
        "host": "div",
        "required": "yes",
        "type": "layout"
      },
      {
        "name": ".content-area",
        "description": "Designate a container for page level content.",
        "host": "main",
        "required": "yes",
        "type": "layout"
      }
    ]
  },
  "ClrNavLevel": {
    "bindings": [
      {
        "name": "clr-nav-level",
        "accepts": "number",
        "type": "input",
        "options": "1, 2",
        "description": "Designate the responsive nav level. When active, '1' is access from icon on laft ans 2 is accessed from the icon on the right.",
        "default": ""
      }
    ],
    "methods": [
      {
        "name": "",
        "parameters": [],
        "description": "",
        "returns": ""
      }
    ],
    "css": [
      {
        "name": ".alert-text",
        "description": "Defines the text that is placed into the alert",
        "host": "div, span",
        "required": true
      }
    ]
  },
  "ClrOption": {
    "bindings": [
      {
        "name": "id",
        "accepts": "string",
        "type": "input",
        "options": "Valid HTML id string.",
        "description": "Set a custom id for the option.",
        "default": "Internally generated id."
      },
      {
        "name": "clrValue",
        "accepts": "T",
        "type": "input",
        "options": "T",
        "description": "This is the option item of type T.",
        "default": "n/a"
      }
    ],
    "methods": [],
    "css": []
  },
  "ClrOptions": {
    "bindings": [
      {
        "name": "id",
        "accepts": "string",
        "type": "input",
        "options": "Valid HTML id string.",
        "description": "Set this for a custom id on the ClrOptions element.",
        "default": "Internally generated id."
      }
    ],
    "methods": [],
    "css": []
  },
  "ClrOptionItems": {
    "bindings": [
      {
        "name": "clrOptionItemsOf",
        "accepts": "items: t[]",
        "type": "input",
        "options": "items: T[]",
        "description": "Structural directive iterator that accepts a list of ClrOptions..",
        "default": "n/a"
      },
      {
        "name": "clrOptionItemsTrackBy",
        "accepts": "TrackByFunction<T>",
        "type": "input",
        "options": "TrackByFunction<T>",
        "description": "Custom trackBy function for optimizing items in the options list.",
        "default": "n/a"
      },
      {
        "name": "clrOptionItemsField",
        "accepts": "string",
        "type": "input",
        "options": "String of the Option model field.",
        "description": "Sets the field used to filter options with as user types.",
        "default": "n/a"
      }
    ],
    "methods": [],
    "css": []
  },
  "ClrOptionSelected": {
    "bindings": [
      {
        "name": "",
        "accepts": "",
        "type": "",
        "options": "",
        "description": "",
        "default": 0
      }
    ],
    "methods": [
      {
        "name": "togglePanel",
        "parameters": [],
        "description": "Opens and close the panel.",
        "returns": "void"
      }
    ],
    "css": [
      {
        "name": ".alert-text",
        "description": "Defines the text that is placed into the alert",
        "host": "div, span",
        "required": true
      }
    ]
  },
  "ClrProgressBar": {
    "bindings": [
      {
        "name": "id",
        "accepts": "string",
        "type": "input",
        "options": "any string",
        "description": "Set an HTML id",
        "default": "null"
      },
      {
        "name": "clrValue",
        "accepts": "number",
        "type": "input",
        "options": "1,25, 50, 100 ...",
        "description": "Specify how much of the progress has been completed.",
        "default": "0"
      },
      {
        "name": "clrMax",
        "accepts": "number",
        "type": "input",
        "options": "50, 100, 200, ...",
        "description": "Set the total amount of work to be done. it must have a value greater than 0.",
        "default": "100"
      },
      {
        "name": "clrDisplayVal",
        "accepts": "any string",
        "type": "input",
        "options": "$, £, ¥, ...",
        "description": "Overwrite the default value representation (%). Should be short, one or two characters at most.",
        "default": ""
      },
      {
        "name": "clrLabeled",
        "accepts": "boolean | string",
        "type": "input",
        "options": "true, false | valid HTML label string",
        "description": "When true creates an auto generated label for the progress element. String value creates a custom label.",
        "default": "null"
      },
      {
        "name": "clrFlash",
        "accepts": "boolean | string",
        "type": "input",
        "options": "true, false, valid HTML string",
        "description": "Set this to make it flash and disappear when clrMaxValue is reached.",
        "default": "null"
      }
    ],
    "methods": [
      {
        "name": "",
        "parameters": [],
        "description": "",
        "returns": ""
      }
    ],
    "css": [
      {
        "name": ".alert-text",
        "description": "Defines the text that is placed into the alert",
        "host": "div, span",
        "required": true
      }
    ]
  },
  "ClrRadio": {
    "bindings": [
      {
        "name": "clrInline",
        "accepts": "string",
        "type": "input",
        "options": "horizontal, vertical",
        "description": "Set the the (checkboxes or radios) orientation.",
        "default": "horizontal"
      }
    ],
    "Methods": [
      {
        "name": "togglePanel",
        "parameters": [],
        "description": "Opens and close the panel.",
        "returns": "void"
      }
    ],
    "css": [
      {
        "name": ".alert-text",
        "description": "Defines the text that is placed into the alert",
        "host": "div, span",
        "required": true
      }
    ]
  },
  "ClrRange": {
    "bindings": [
      {
        "name": "min",
        "accepts": "number",
        "type": "input",
        "options": "-50, 0, 50",
        "description": "The maximum value of the range.",
        "default": 0
      },
      {
        "name": "max",
        "accepts": "number",
        "type": "input",
        "options": "100, 200, 500",
        "description": "The minimum value of the range..",
        "default": "100"
      },
      {
        "name": "step",
        "accepts": "number",
        "type": "input",
        "options": "1, 2, 5, 10 ...",
        "description": "Specify the granularity of the range..",
        "default": ""
      },
      {
        "name": "value",
        "accepts": "number",
        "type": "input",
        "options": "0,1,2,3,4...",
        "description": "The current value of the range.",
        "default": "0 or the min value set for the range."
      },
      {
        "name": "clrRangeHasProgress",
        "accepts": "boolean",
        "type": "input",
        "options": "true, false",
        "description": "Show the percentage of the range below thecurrent value..",
        "default": "false"
      }
    ],
    "methods": [
      {
        "name": "togglePanel",
        "parameters": [],
        "description": "Opens and close the panel.",
        "returns": "void"
      }
    ],
    "css": [
      {
        "name": ".alert-text",
        "description": "Defines the text that is placed into the alert",
        "host": "div, span",
        "required": true
      }
    ]
  },
  "ClrRecursiveFor": {
    "bindings": [
      {
        "name": "clrRecursiveFor",
        "accepts": "T | T[]",
        "type": "input",
        "options": "The Type or array of Type representing ClrTreeNode's.",
        "description": "Two way binding of the ",
        "default": ""
      },
      {
        "name": "clrRecursiveForGetChildren",
        "accepts": "T => T[] | Promise<T[]> | Observable<T[]>",
        "type": "input",
        "options": "n/a",
        "description": "The function called used to iterate over the children of a node. Can return async results (Promise or Observable).",
        "default": ""
      }
    ],
    "methods": [
      {
        "name": "",
        "parameters": [],
        "description": "",
        "returns": ""
      }
    ],
    "css": [
      {
        "name": ".alert-text",
        "description": "Defines the text that is placed into the alert",
        "host": "div, span",
        "required": true
      }
    ]
  },
  "ClrSidnav": {
    "bindings": [],
    "methods": [],
    "css": [
      {
        "name": ".sidenav",
        "description": "A navigation element for the sidenav content.",
        "host": "nav",
        "required": "yes",
        "type": "layout"
      },
      {
        "name": ".sidenav-content",
        "description": "A container element for one or more .nav-group elements",
        "host": "div",
        "required": "yes",
        "type": "layout"
      },
      {
        "name": ".nav-group",
        "description": "An element used to create a collapsible container of nav links.",
        "host": "section",
        "required": "yes",
        "type": "layout"
      },
      {
        "name": ".collapsible",
        "description": "When composed with .nav-group it makes the section expand and collapse.",
        "host": "section",
        "required": "no",
        "type": ""
      },
      {
        "name": ".nav-list",
        "description": "A list of navigation links. ",
        "host": "ul",
        "required": "yes",
        "type": "layout"
      },
      {
        "name": ".nav-link",
        "description": "An element used to designate navigation for an application.",
        "host": "li",
        "required": "yes",
        "type": "style"
      },
      {
        "name": ".active",
        "description": "When composed with .nav-link it visually indicates the active navigation element in the sidnav.",
        "host": "li",
        "required": "yes - only on one .nav-link at a time.",
        "type": "style"
      }
    ]
  },
  "ClrSignpost": {
    "bindings": [],
    "methods": [],
    "css": []
  },
  "ClrSignpostContent": {
    "bindings": [
      {
        "name": "clrPosition",
        "accepts": "string",
        "type": "input",
        "options": "",
        "description": "top-left, top-middle, top-right, right-top, right-middle, right-bottom, bottom-right, bottom-middle, bottom-left, left-bottom, left-middle, left-top",
        "default": "right-middle"
      }
    ],
    "methods": [
      {
        "name": "close",
        "parameters": [],
        "description": "A method call that will close the popover content.",
        "returns": "void"
      }
    ],
    "css": [
      {
        "name": ".alert-text",
        "description": "Defines the text that is placed into the alert",
        "host": "div, span",
        "required": true
      }
    ]
  },
  "ClrSignpostTrigger": {
    "bindings": [
      {
        "name": "",
        "accepts": "",
        "type": "",
        "options": "",
        "description": "",
        "default": 0
      }
    ],
    "methods": [
      {
        "name": "",
        "parameters": [],
        "description": "",
        "returns": ""
      }
    ],
    "css": [
      {
        "name": ".alert-text",
        "description": "Defines the text that is placed into the alert",
        "host": "div, span",
        "required": true
      }
    ]
  },
  "ClrSpinner": {
    "bindings": [
      {
        "name": "clrInline",
        "accepts": "boolean",
        "type": "input",
        "options": "true, false",
        "description": "Align the spinner vertically in the line-height",
        "default": "false"
      },
      {
        "name": "clrInverse",
        "accepts": "boolean",
        "type": "input",
        "options": "true, false",
        "description": "User the inverse spinner background color for the theme ($clr-spinner-inverse-bg-color).",
        "default": "false"
      },
      {
        "name": "clrSmall",
        "accepts": "boolean",
        "type": "input",
        "options": "true, false",
        "description": "Use the small (18px x 18px) size.",
        "default": "false"
      },
      {
        "name": "clrMedium",
        "accepts": "boolean",
        "type": "input",
        "options": "true, false",
        "description": "Use the medium (36px x 36px) size.",
        "default": "false"
      }
    ],
    "methods": [
      {
        "name": "",
        "parameters": [],
        "description": "",
        "returns": ""
      }
    ],
    "css": [
      {
        "name": ".alert-text",
        "description": "Defines the text that is placed into the alert",
        "host": "div, span",
        "required": true
      }
    ]
  },
  "ClrStackBlock": {
    "bindings": [
      {
        "name": "",
        "accepts": "",
        "type": "",
        "options": "",
        "description": "",
        "default": 0
      }
    ],
    "methods": [
      {
        "name": "",
        "parameters": [],
        "description": "",
        "returns": ""
      }
    ],
    "css": [
      {
        "name": ".alert-text",
        "description": "Defines the text that is placed into the alert",
        "host": "div, span",
        "required": true
      }
    ]
  },
  "ClrStackContentInput": {
    "bindings": [
      {
        "name": "",
        "accepts": "",
        "type": "",
        "options": "",
        "description": "",
        "default": 0
      }
    ],
    "methods": [
      {
        "name": "",
        "parameters": [],
        "description": "",
        "returns": ""
      }
    ],
    "css": [
      {
        "name": ".alert-text",
        "description": "Defines the text that is placed into the alert",
        "host": "div, span",
        "required": true
      }
    ]
  },
  "ClrStackHeader": {
    "bindings": [],
    "methods": [],
    "css": []
  },
  "ClrStackViewCustomTags": {
    "bindings": [],
    "methods": [],
    "css": []
  },
  "ClrStackView": {
    "bindings": [],
    "methods": [],
    "css": []
  },
  "ClrStepper": {
    "bindings": [
      {
        "name": "clrInitialStep",
        "accepts": "string",
        "type": "input",
        "options": "Valid string to designate the starting formGroupName or ngModelGroup.",
        "description": "Set the initial ClrStepperPanel to initialize the stepper with. ",
        "default": "null"
      }
    ],
    "methods": [],
    "css": []
  },
  "ClrStepButton": {
    "bindings": [
      {
        "name": "clrStepButton",
        "accepts": "string",
        "type": "input",
        "options": "next, submit",
        "description": "Set the step button to advance panels (next) or submit the form.",
        "default": "next"
      }
    ],
    "methods": [],
    "css": []
  },
  "ClrStepperPanel": {
    "bindings": [],
    "methods": [
      {
        "name": "togglePanel",
        "parameters": [],
        "description": "Opens and close the panel.",
        "returns": "void"
      }
    ],
    "css": []
  },
  "ClrTabContent": {
    "bindings": [
      {
        "name": "id",
        "accepts": "string",
        "type": "input",
        "options": "Valid html id attribute value.",
        "description": "Set a specific id instead of the generated id.",
        "default": "clr-tab-content-# (where number is incremented for each ClrTab instance)."
      }
    ],
    "methods": [
      {
        "name": "",
        "parameters": [],
        "description": "",
        "returns": ""
      }
    ],
    "css": [
      {
        "name": ".alert-text",
        "description": "Defines the text that is placed into the alert",
        "host": "div, span",
        "required": true
      }
    ]
  },
  "ClrTab": {
    "bindings": [
      {
        "name": "",
        "accepts": "",
        "type": "",
        "options": "",
        "description": "",
        "default": 0
      }
    ],
    "methods": [
      {
        "name": "",
        "parameters": [],
        "description": "",
        "returns": ""
      }
    ],
    "css": [
      {
        "name": ".alert-text",
        "description": "Defines the text that is placed into the alert",
        "host": "div, span",
        "required": true
      }
    ]
  },
  "ClrTabs": {
    "bindings": [
      {
        "name": "clrLayout",
        "accepts": "string",
        "type": "input",
        "options": "horizontal, vertical",
        "description": "Change the tab orientation to vertical or horizontal.",
        "default": "horizontal"
      }
    ],
    "methods": [
      {
        "name": "",
        "parameters": [],
        "description": "",
        "returns": ""
      }
    ],
    "css": [
      {
        "name": ".alert-text",
        "description": "Defines the text that is placed into the alert",
        "host": "div, span",
        "required": true
      }
    ]
  },
  "ClrTabLink": {
    "bindings": [
      {
        "name": "clrTabLinkInOverflow",
        "accepts": "boolean",
        "type": "input",
        "options": "true, false",
        "description": "Puts the tab button into the overflow container when true.",
        "default": "false"
      },
      {
        "name": "id",
        "accepts": "string",
        "type": "input",
        "options": "Valid html id",
        "description": "Set this to a specific id that is also used for aria-controls/aria-labelledby.",
        "default": "clr-tab-content-# (where number is incremented for each ClrTab instance)."
      }
    ],
    "methods": [
      {
        "name": "",
        "parameters": [],
        "description": "",
        "returns": ""
      }
    ],
    "css": [
      {
        "name": ".alert-text",
        "description": "Defines the text that is placed into the alert",
        "host": "div, span",
        "required": true
      }
    ]
  },
  "ClrTable": {
    "bindings": [],
    "methods": [],
    "css": [
      {
        "name": ".table",
        "description": "Add default Clarity table styles.",
        "host": "table",
        "required": "yes",
        "type": "style"
      },
      {
        "name": "left",
        "description": "Left align content. Table header and row cells should have the same alignemnt.",
        "host": "th, td",
        "required": "no",
        "type": "style"
      },
      {
        "name": ".table-noborder",
        "description": "Removes the default Clarity table border",
        "host": "table",
        "required": "no",
        "type": "visual style"
      },
      {
        "name": ".compact-table",
        "description": "Reduces line height and compacts the table content.",
        "host": "table",
        "required": "no",
        "type": "layout"
      },
      {
        "name": ".table-vertical",
        "description": "Orient a table vertically and use the left most (th or td) element to serve as table header.",
        "host": "table",
        "required": "no",
        "type": "layout"
      }
    ]
  },
  "ClrTimeline": {
    "bindings": [
      {
        "name": "clrLayout",
        "accepts": "string",
        "type": "input",
        "options": "horizontal, vertical",
        "description": "Set the orientation of the timeline.",
        "default": "horizontal"
      }
    ],
    "methods": [],
    "css": [
      {
        "name": ".alert-text",
        "description": "Defines the text that is placed into the alert",
        "host": "div, span",
        "required": true
      }
    ]
  },
  "ClrTimelineStep": {
    "bindings": [
      {
        "name": "clrState",
        "accepts": "string",
        "type": "input",
        "options": "not-started, current, processing, success, error",
        "description": "Sets the current state for a step (as reflected in the icon displayed.",
        "default": "not-started"
      }
    ],
    "methods": [
      {
        "name": "",
        "parameters": [],
        "description": "",
        "returns": ""
      }
    ],
    "css": [
      {
        "name": ".alert-text",
        "description": "Defines the text that is placed into the alert",
        "host": "div, span",
        "required": true
      }
    ]
  },
  "ClrTimelineStepDescription": {
    "bindings": [
      {
        "name": "",
        "accepts": "",
        "type": "",
        "options": "",
        "description": "",
        "default": 0
      }
    ],
    "methods": [
      {
        "name": "",
        "parameters": [],
        "description": "",
        "returns": ""
      }
    ],
    "css": [
      {
        "name": ".alert-text",
        "description": "Defines the text that is placed into the alert",
        "host": "div, span",
        "required": true
      }
    ]
  },
  "ClrTimelineStepHeader": {
    "bindings": [
      {
        "name": "",
        "accepts": "",
        "type": "",
        "options": "",
        "description": "",
        "default": 0
      }
    ],
    "methods": [
      {
        "name": "",
        "parameters": [],
        "description": "",
        "returns": ""
      }
    ],
    "css": [
      {
        "name": ".alert-text",
        "description": "Defines the text that is placed into the alert",
        "host": "div, span",
        "required": true
      }
    ]
  },
  "ClrTimelineStepTitle": {
    "bindings": [
      {
        "name": "",
        "accepts": "",
        "type": "",
        "options": "",
        "description": "",
        "default": 0
      }
    ],
    "methods": [
      {
        "name": "",
        "parameters": [],
        "description": "",
        "returns": ""
      }
    ],
    "css": [
      {
        "name": ".alert-text",
        "description": "Defines the text that is placed into the alert",
        "host": "div, span",
        "required": true
      }
    ]
  },
  "ClrTooltip": {
    "bindings": [],
    "methods": [],
    "css": []
  },
  "ClrTooltipContent": {
    "bindings": [
      {
        "name": "id",
        "accepts": "string",
        "type": "input",
        "options": "any valid string",
        "description": "Set the id of a tooltip.",
        "default": ""
      },
      {
        "name": "clrPosition",
        "accepts": "string",
        "type": "input",
        "options": "right, top-right, top-left, bottom-right, bottom-left, right, left",
        "description": "Set the display position for the content related to the trigger element..",
        "default": "right"
      },
      {
        "name": "clrSize",
        "accepts": "string",
        "type": "input",
        "options": "xs, sm, md, lg",
        "description": "Set the size of the content element.",
        "default": "md"
      }
    ],
    "methods": [],
    "css": [
      {
        "name": ".alert-text",
        "description": "Defines the text that is placed into the alert",
        "host": "div, span",
        "required": true
      }
    ]
  },
  "ClrTooltipTrigger": {
    "bindings": [
      {
        "name": "",
        "accepts": "",
        "type": "",
        "options": "",
        "description": "",
        "default": 0
      }
    ],
    "methods": [
      {
        "name": "",
        "parameters": [],
        "description": "",
        "returns": ""
      }
    ],
    "css": [
      {
        "name": ".alert-text",
        "description": "Defines the text that is placed into the alert",
        "host": "div, span",
        "required": true
      }
    ]
  },
  "ClrTree": {
    "bindings": [
      {
        "name": "clrLazy",
        "accepts": "boolean",
        "type": "input",
        "options": "true, false",
        "description": "Turn lazy loading on and only load the currently displayed nodes.",
        "default": "false"
      }
    ],
    "methods": [
      {
        "name": "",
        "parameters": [],
        "description": "",
        "returns": ""
      }
    ],
    "css": [
      {
        "name": ".alert-text",
        "description": "Defines the text that is placed into the alert",
        "host": "div, span",
        "required": true
      }
    ]
  },
  "ClrTreeNode": {
    "bindings": [
      {
        "name": "clrSelected",
        "accepts": "ClrSelectedState",
        "type": "two-way",
        "options": "ClrSelectedState.UNSELECTED, ClrSelectedState.SELECTED, ClrSelectedState.INDETERMINATE",
        "description": "Enable selection for the tree and its nodes.",
        "default": "null"
      },
      {
        "name": "clrExpandable",
        "accepts": "boolean",
        "type": "input",
        "options": "true, false",
        "description": "When true, allow an app to prevent pre-loading of nodes that are not expanded..",
        "default": "false"
      },
      {
        "name": "clrExpanded",
        "accepts": "boolean",
        "type": "two-way",
        "options": "true, false",
        "description": "When true a node is expanded.",
        "default": "false"
      }
    ],
    "methods": [
      {
        "name": "",
        "parameters": [],
        "description": "",
        "returns": ""
      }
    ],
    "css": [
      {
        "name": ".alert-text",
        "description": "Defines the text that is placed into the alert",
        "host": "div, span",
        "required": true
      }
    ]
  },
  "ClrVerticalNav": {
    "bindings": [
      {
        "name": "clrVerticalNavCollapsible",
        "accepts": "boolean",
        "type": "input",
        "options": "true, false",
        "description": "When true, the component provides a button to toggle expanded/collapsed states.",
        "default": "false"
      },
      {
        "name": "clrVerticalNavCollapsed",
        "accepts": "boolean",
        "type": "two-way",
        "options": "true, false",
        "description": "Two way binding to the collapsed/expanded state.",
        "default": "false"
      }
    ]
  },
  "ClrVerticalNavGroup": {
    "bindings": [
      {
        "name": "",
        "accepts": "",
        "type": "",
        "options": "",
        "description": "",
        "default": 0
      }
    ],
    "methods": [
      {
        "name": "",
        "parameters": [],
        "description": "",
        "returns": ""
      }
    ],
    "css": [
      {
        "name": ".alert-text",
        "description": "Defines the text that is placed into the alert",
        "host": "div, span",
        "required": true
      }
    ]
  },
  "ClrVerticalNavGroupChildren": {
    "bindings": [
      {
        "name": "",
        "accepts": "",
        "type": "",
        "options": "",
        "description": "",
        "default": 0
      }
    ],
    "methods": [
      {
        "name": "",
        "parameters": [],
        "description": "",
        "returns": ""
      }
    ],
    "css": [
      {
        "name": ".alert-text",
        "description": "Defines the text that is placed into the alert",
        "host": "div, span",
        "required": true
      }
    ]
  },
  "ClrVerticalNavIcon": {
    "bindings": [
      {
        "name": "",
        "accepts": "",
        "type": "",
        "options": "",
        "description": "",
        "default": 0
      }
    ],
    "methods": [
      {
        "name": "",
        "parameters": [],
        "description": "",
        "returns": ""
      }
    ],
    "css": [
      {
        "name": ".alert-text",
        "description": "Defines the text that is placed into the alert",
        "host": "div, span",
        "required": true
      }
    ]
  },
  "ClrVerticalNavLink": {
    "bindings": [
      {
        "name": "",
        "accepts": "",
        "type": "",
        "options": "",
        "description": "",
        "default": 0
      }
    ],
    "methods": [
      {
        "name": "",
        "parameters": [],
        "description": "",
        "returns": ""
      }
    ],
    "css": [
      {
        "name": ".alert-text",
        "description": "Defines the text that is placed into the alert",
        "host": "div, span",
        "required": true
      }
    ]
  },
  "ClrWizardButton": {
    "bindings": [
      {
        "name": "clrType",
        "accepts": "string",
        "type": "input",
        "options": "cancel, next, previous, finish, danger",
        "description": "Set the type of button.",
        "default": 0
      },
      {
        "name": "clrWizardButtonDisabled",
        "accepts": "boolean",
        "type": "input",
        "options": "true, false",
        "description": "Enable or disable the button.",
        "default": "false"
      },
      {
        "name": "clrWizardButtonHidden",
        "accepts": "boolean",
        "type": "input",
        "options": "true, false",
        "description": "Hide the button from users.",
        "default": "false"
      },
      {
        "name": "clrWizardButtonClicked",
        "accepts": "n/a",
        "type": "output",
        "options": "n/a",
        "description": "Output that emits when there is a button click event.",
        "default": "n/a"
      }
    ],
    "methods": [
      {
        "name": "",
        "parameters": [],
        "description": "",
        "returns": ""
      }
    ],
    "css": [
      {
        "name": ".alert-text",
        "description": "Defines the text that is placed into the alert",
        "host": "div, span",
        "required": true
      }
    ]
  },
  "ClrWizardCustomTags": {
    "bindings": [
      {
        "name": "",
        "accepts": "",
        "type": "",
        "options": "",
        "description": "",
        "default": 0
      }
    ],
    "methods": [
      {
        "name": "",
        "parameters": [],
        "description": "",
        "returns": ""
      }
    ],
    "css": [
      {
        "name": ".alert-text",
        "description": "Defines the text that is placed into the alert",
        "host": "div, span",
        "required": true
      }
    ]
  },
  "ClrWizardHeaderAction": {
    "bindings": [
      {
        "name": "id",
        "accepts": "string",
        "type": "input",
        "options": "Any valid id string.",
        "description": "Set a custom id string for the header action.",
        "default": "wizardHeaderActionIndex: e.g 0, 1, 2..."
      },
      {
        "name": "title",
        "accepts": "string",
        "type": "input",
        "options": "any valid string.",
        "description": "Set a custom title for the action button.",
        "default": ""
      },
      {
        "name": "clrWizardHeaderActionDisabled",
        "accepts": "boolean",
        "type": "input",
        "options": "true, false",
        "description": "Disable the header action button..",
        "default": "false"
      },
      {
        "name": "actionClicked",
        "accepts": "n/a",
        "type": "output",
        "options": "n/a",
        "description": "Out put that emits the id of the action button clicked.",
        "default": ""
      }
    ],
    "methods": [
      {
        "name": "",
        "parameters": [],
        "description": "",
        "returns": ""
      }
    ],
    "css": [
      {
        "name": ".alert-text",
        "description": "Defines the text that is placed into the alert",
        "host": "div, span",
        "required": true
      }
    ]
  },
  "ClrWizard": {
    "bindings": [
      {
        "name": "clrWizardSize",
        "accepts": "string",
        "type": "input",
        "options": "md, lg, xl",
        "description": "Set the size for the wizard modal.",
        "default": "xl"
      },
      {
        "name": "clrWizardClosable",
        "accepts": "boolean",
        "type": "input",
        "options": "true, false",
        "description": "When true it allows the user to close the wizard.",
        "default": "true"
      },
      {
        "name": "clrWizardForceForwardNavigation",
        "accepts": "boolean",
        "type": "input",
        "options": "true, false",
        "description": "Reset the pages when navigating backwards when true.",
        "default": "false"
      },
      {
        "name": "clrWizardOpen",
        "accepts": "boolean",
        "type": "two-way",
        "options": "true, false",
        "description": "Two way binding for the open state of a wizard.",
        "default": ""
      },
      {
        "name": "clrWizardPreventDefaultNext",
        "accepts": "boolean",
        "type": "input",
        "options": "true, false",
        "description": "Prevents user from moving to next page or closing itself. .",
        "default": ""
      },
      {
        "name": "clrWizardPreventDefaultCancel",
        "accepts": "boolean",
        "type": "input",
        "options": "true, false",
        "description": "Prevents wizard from closing when cancel/close buttons are activated.",
        "default": "false"
      },
      {
        "name": "clrWizardPreventNavigation",
        "accepts": "boolean",
        "type": "input",
        "options": "true, false",
        "description": "When true it prevents wizard from any navigation.",
        "default": "false"
      },
      {
        "name": "clrWizardDisableStepnav",
        "accepts": "boolean",
        "type": "input",
        "options": "true, false",
        "description": "When true it prevents the stepnav buttons from working.",
        "default": "false"
      },
      {
        "name": "clrWizardOnCancel",
        "accepts": "n/a",
        "type": "output",
        "options": "n/a",
        "description": "Output that emits when wizard is canceled. Combine with clrWizardPreventDefaultCancel to add custom cancel routines for a wizard.",
        "default": "n/a"
      },
      {
        "name": "clrWizardOnFinish",
        "accepts": "n/a",
        "type": "output",
        "options": "n/a",
        "description": "Output that emits when wizard finishes. Combint with clrWizardPreventDefaultNext to add custom completion routines.",
        "default": "n/a"
      },
      {
        "name": "clrWizardOnReset",
        "accepts": "n/a",
        "type": "output",
        "options": "n/a",
        "description": "Output that emits when wizard resets.",
        "default": ""
      },
      {
        "name": "clrWizardCurrentPageChanged",
        "accepts": "n/a",
        "type": "output",
        "options": "n/a",
        "description": "Output that emits when wizard page changes. Use for non-blocking validation. .",
        "default": "n/a"
      },
      {
        "name": "clrWizardOnNext",
        "accepts": "n/a",
        "type": "output",
        "options": "n/a",
        "description": "Output that emits when wizard moves to next page. Combine with clrWizardPreventDefaultNext to create custom validation/navigation routines.",
        "default": "n/a"
      },
      {
        "name": "clrWizardOnPrevious",
        "accepts": "n/a",
        "type": "output",
        "options": "n/a",
        "description": "Output that emits when wizard moves to previous page.",
        "default": ""
      }
    ],
    "methods": [
      {
        "name": "finish",
        "parameters": [
          {
            "name": "skipChecksAndEmits",
            "type": "boolean",
            "description": "When true, do not emit or run checks before closing the wizard."
          }
        ],
        "description": "Marks wizard as finished.",
        "returns": "void"
      },
      {
        "name": "forceFinish",
        "parameters": [],
        "description": "Mark wizard as finished then run checks and emit outputs.",
        "returns": "void"
      },
      {
        "name": "open",
        "parameters": [],
        "description": "Open the wizard.",
        "returns": "void"
      },
      {
        "name": "close",
        "parameters": [],
        "description": "Close the wizard",
        "returns": ""
      },
      {
        "name": "toggle",
        "parameters": [],
        "description": "Toggle the wizard to the opposite open/closed state.",
        "returns": "void"
      },
      {
        "name": "previous",
        "parameters": [],
        "description": "Move the wizard to the previous page.",
        "returns": "void"
      },
      {
        "name": "next",
        "parameters": [
          {
            "name": "skipChecksAndEmits",
            "type": "boolean",
            "description": "When true, do not emit or run checks before navigating to next page."
          }
        ],
        "description": "Navigate wizard to the next page.",
        "returns": "void"
      },
      {
        "name": "forceNext",
        "parameters": [],
        "description": "Move wizard to the next page without checks or emiting outputs.",
        "returns": "void"
      },
      {
        "name": "cancel",
        "parameters": [],
        "description": "Cancel and close the wizard.",
        "returns": "void"
      },
      {
        "name": "checkAndCancel",
        "parameters": [],
        "description": "Check for alternate cancel flows on current page and perform cancel if there are none.",
        "returns": "void"
      },
      {
        "name": "goTo",
        "parameters": [
          {
            "name": "pageId",
            "type": "string",
            "description": "Identifier of the page to navigate to."
          }
        ],
        "description": "Navigate to a specific page.",
        "returns": "void"
      },
      {
        "name": "reset",
        "parameters": [],
        "description": "Reset all wizard pages to incompl= trueete. Navigates wizard to first page.",
        "returns": "void"
      }
    ],
    "css": [
      {
        "name": ".alert-text",
        "description": "Defines the text that is placed into the alert",
        "host": "div, span",
        "required": true
      }
    ]
  },
  "ClrWizardPage": {
    "bindings": [
      {
        "name": "clrWizardPageNextDisabled",
        "accepts": "boolean",
        "type": "two-way",
        "options": "true, false",
        "description": "Two way binding that emits when the next page disabled state is changed.",
        "default": "false"
      },
      {
        "name": "clrWizardPagePreviousDisabled",
        "accepts": "boolean",
        "type": "two-way",
        "options": "true, false",
        "description": "Two way binding that emits when the previous page disabled state is changed..",
        "default": "false"
      },
      {
        "name": "clrWizardPageHasError",
        "accepts": "boolean",
        "type": "input",
        "options": "true, false",
        "description": "True indicates the page (and associated nav button) have error state.",
        "default": "false"
      },
      {
        "name": "clrWizardPagePreventDefault",
        "accepts": "boolean",
        "type": "input",
        "options": "true, false",
        "description": "Override all actions from the page level. E.g when app needs to use alternative validation.",
        "default": "false"
      },
      {
        "name": "clrWizardPagePreventDefaultCancel",
        "accepts": "boolean",
        "type": "two-way",
        "options": "true, false",
        "description": "Override the cancel action at the page level.",
        "default": "false"
      },
      {
        "name": "clrWizardPagePreventDefaultNext",
        "accepts": "boolean",
        "type": "input",
        "options": "true, false",
        "description": "Override the forward navigation at the page level.",
        "default": "false"
      },
      {
        "name": "clrWizardPageOnCommit",
        "accepts": "n/a",
        "type": "output",
        "options": "n/a",
        "description": "Output for an event fired when next/finish buttons are clicked.",
        "default": "n/a"
      },
      {
        "name": "clrWizardPageOnLoad",
        "accepts": "n/a",
        "type": "output",
        "options": "n/a",
        "description": "Output event emitted when page becomes current page.",
        "default": "n/a"
      },
      {
        "name": "clrWizardPageOnCancel",
        "accepts": "n/a",
        "type": "output",
        "options": "n/a",
        "description": "Page level event that emits when wizard is canceled.",
        "default": "n/a"
      },
      {
        "name": "clrWizardPageFinish",
        "accepts": "n/a",
        "type": "output",
        "options": "n/a",
        "description": "Output that emits when the page finish button is clicked.",
        "default": "n/a"
      },
      {
        "name": "clrWizardPagePrevious",
        "accepts": "n/a",
        "type": "output",
        "options": "n/a",
        "description": "utput that emits an event when the previous button is clicked.",
        "default": "n/a"
      },
      {
        "name": "clrWizardPageNext",
        "accepts": "n/a",
        "type": "output",
        "options": "n/a",
        "description": "Output that emits an event when the next button is clicked.",
        "default": ""
      },
      {
        "name": "clrWizardPageDanger",
        "accepts": "n/a",
        "type": "output",
        "options": "n/a",
        "description": "Output that emits an event when the danger button is clicked.",
        "default": "n/a"
      },
      {
        "name": "clrWizardPagePrimary",
        "accepts": "n/a",
        "type": "output",
        "options": "n/a",
        "description": "Output that emits an event when the next, finsih or danger buttons are clicked.",
        "default": "n/a"
      },
      {
        "name": "clrWizardPageCustomButton",
        "accepts": "n/a",
        "type": "output",
        "options": "n/a",
        "description": "Output that emits an event when a custom button is clicked.",
        "default": "n/a"
      },
      {
        "name": "id",
        "accepts": "string",
        "type": "input",
        "options": "Va;id string.",
        "description": "Set a custom id for a wizard page.",
        "default": "0, 1, 2..."
      }
    ],
    "methods": [
      {
        "name": "readyToComplete",
        "parameters": [],
        "description": "A check to see if the next page is disabled",
        "returns": "boolean"
      },
      {
        "name": "completed",
        "parameters": [],
        "description": "A getter to check to see if the page is completed",
        "returns": "boolean"
      },
      {
        "name": "completed",
        "parameters": [
          {
            "name": "value",
            "type": "boolean",
            "description": "Boolean for the true/false state."
          }
        ],
        "description": "Set the page completed state to true/false",
        "returns": "void"
      },
      {
        "name": "current",
        "parameters": [],
        "description": "A check to see if this is the current page active in the wizard.",
        "returns": "boolean"
      },
      {
        "name": "disabled",
        "parameters": [],
        "description": "A check to see if this page is disabled",
        "returns": "boolean"
      },
      {
        "name": "enabled",
        "parameters": [],
        "description": "A check to see if the page is current, completed and that the previous step was completed.",
        "returns": "boolean"
      },
      {
        "name": "makeCurrent",
        "parameters": [],
        "description": "Makes the page instance the current page in the wizard.",
        "returns": "void"
      }
    ],
    "css": [
      {
        "name": ".alert-text",
        "description": "Defines the text that is placed into the alert",
        "host": "div, span",
        "required": true
      }
    ]
  },
  "ClrWizardPageButtons": {
    "bindings": [],
    "methods": [],
    "css": []
  },
  "ClrWizardPageHeaderActions": {
    "bindings": [],
    "methods": [],
    "css": []
  },
  "ClrWizardPageNavTitle": {
    "bindings": [],
    "methods": [],
    "css": []
  },
  "ClrWizardPageTitle": {
    "bindings": [],
    "methods": [],
    "css": []
  },
  "ClrWizardStepnav": {
    "bindings": [],
    "methods": [],
    "css": []
  },
  "ClrWizardStepnavItem": {
    "bindings": [
      {
        "name": "page",
        "accepts": "ClrWizardPage",
        "type": "input",
        "options": "ClrWizardPage",
        "description": "Set the page to associate with the nav item..",
        "default": "n/a"
      }
    ],
    "methods": [],
    "css": []
  }
}
