"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require("@angular/core");
var Alert = (function () {
    function Alert() {
        this.isSmall = false;
        this.type = "alert-info";
        this.closable = true;
        this.isAppLevel = false;
        this._closed = false;
        this._closedChanged = new core_1.EventEmitter(false);
        this.alertTypes = ["alert-info", "alert-warning", "alert-danger", "alert-success"];
    }
    Alert.prototype.close = function () {
        if (!this.closable) {
            return;
        }
        this._closed = true;
        this._closedChanged.emit(true);
    };
    Alert.prototype.open = function () {
        this._closed = false;
        this._closedChanged.emit(false);
    };
    Object.defineProperty(Alert.prototype, "alertType", {
        get: function () {
            if (this.alertTypes.indexOf(this.type) > -1) {
                return this.type;
            }
            return "alert-info";
        },
        enumerable: true,
        configurable: true
    });
    __decorate([
        core_1.Input("clrAlertSizeSmall"), 
        __metadata('design:type', Boolean)
    ], Alert.prototype, "isSmall", void 0);
    __decorate([
        core_1.Input("clrAlertType"), 
        __metadata('design:type', String)
    ], Alert.prototype, "type", void 0);
    __decorate([
        core_1.Input("clrAlertClosable"), 
        __metadata('design:type', Boolean)
    ], Alert.prototype, "closable", void 0);
    __decorate([
        core_1.Input("clrAlertAppLevel"), 
        __metadata('design:type', Boolean)
    ], Alert.prototype, "isAppLevel", void 0);
    __decorate([
        core_1.Input("clrAlertClosed"), 
        __metadata('design:type', Boolean)
    ], Alert.prototype, "_closed", void 0);
    __decorate([
        core_1.Output("clrAlertClosedChange"), 
        __metadata('design:type', core_1.EventEmitter)
    ], Alert.prototype, "_closedChanged", void 0);
    Alert = __decorate([
        core_1.Component({
            selector: "clr-alert",
            template: "\n      <div\n          *ngIf=\"!_closed\"\n          class=\"alert\"\n          [ngClass]=\"alertType\"\n          [class.alert-sm]=\"isSmall\"\n          [class.alert-app-level]=\"isAppLevel\">\n          <button type=\"button\" class=\"close\" aria-label=\"Close\" *ngIf=\"closable\" (click)=\"close()\">\n              <span aria-hidden=\"true\">&times;</span>\n          </button>\n          <ng-content select=\".alert-item\"></ng-content>\n      </div>\n    "
        }), 
        __metadata('design:paramtypes', [])
    ], Alert);
    return Alert;
}());
exports.Alert = Alert;
