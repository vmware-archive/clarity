"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require("@angular/core");
var clrResponsiveNavigationService_1 = require("../nav/clrResponsiveNavigationService");
var clrResponsiveNavCodes_1 = require("../nav/clrResponsiveNavCodes");
var MainContainer = (function () {
    function MainContainer(elRef, responsiveNavService) {
        this.elRef = elRef;
        this.responsiveNavService = responsiveNavService;
    }
    MainContainer.prototype.ngOnInit = function () {
        var _this = this;
        this._classList = this.elRef.nativeElement.classList;
        this._subscription = this.responsiveNavService.controlNavSubject.subscribe({
            next: function (message) {
                _this.processMessage(message);
            }
        });
    };
    MainContainer.prototype.processMessage = function (message) {
        var navClass = clrResponsiveNavCodes_1.ClrResponsiveNavCodes.NAV_CLASS_HAMBURGER_MENU;
        if (message.controlCode === clrResponsiveNavCodes_1.ClrResponsiveNavCodes.NAV_CLOSE_ALL) {
            this._classList.remove(clrResponsiveNavCodes_1.ClrResponsiveNavCodes.NAV_CLASS_HAMBURGER_MENU);
            this._classList.remove(clrResponsiveNavCodes_1.ClrResponsiveNavCodes.NAV_CLASS_OVERFLOW_MENU);
        }
        else if (message.navLevel === clrResponsiveNavCodes_1.ClrResponsiveNavCodes.NAV_LEVEL_1) {
            this.controlNav(message.controlCode, navClass);
        }
        else if (message.navLevel === clrResponsiveNavCodes_1.ClrResponsiveNavCodes.NAV_LEVEL_2) {
            navClass = clrResponsiveNavCodes_1.ClrResponsiveNavCodes.NAV_CLASS_OVERFLOW_MENU;
            this.controlNav(message.controlCode, navClass);
        }
    };
    MainContainer.prototype.controlNav = function (controlCode, navClass) {
        if (controlCode === clrResponsiveNavCodes_1.ClrResponsiveNavCodes.NAV_OPEN) {
            this._classList.add(navClass);
        }
        else if (controlCode === clrResponsiveNavCodes_1.ClrResponsiveNavCodes.NAV_CLOSE) {
            this._classList.remove(navClass);
        }
        else if (controlCode === clrResponsiveNavCodes_1.ClrResponsiveNavCodes.NAV_TOGGLE) {
            this._classList.toggle(navClass);
        }
    };
    MainContainer.prototype.ngOnDestroy = function () {
        this._subscription.unsubscribe();
    };
    MainContainer = __decorate([
        core_1.Directive({
            selector: "clr-main-container",
            host: {
                "[class.main-container]": "true"
            }
        }), 
        __metadata('design:paramtypes', [core_1.ElementRef, clrResponsiveNavigationService_1.ClrResponsiveNavigationService])
    ], MainContainer);
    return MainContainer;
}());
exports.MainContainer = MainContainer;
