"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require("@angular/core");
var stack_view_1 = require("./stack-view");
var StackHeader = (function () {
    function StackHeader(stackView) {
        this.stackView = stackView;
    }
    StackHeader = __decorate([
        core_1.Component({
            selector: "clr-stack-header",
            template: "\n        <h4 class=\"stack-header\">\n            <span class=\"stack-title\"><ng-content></ng-content></span>\n            \n            <span class=\"stack-actions\">\n                <ng-content select=\".stack-action\"></ng-content>\n                <!-- Undocumented experimental feature: inline editing. -->\n                <a *ngIf=\"stackView.editable\" class=\"stack-action btn btn-sm btn-link\" \n                   (click)=\"stackView.editing = !stackView.editing\">\n                    Edit\n                </a>\n                <!-- End of undocumented experimental feature. -->\n            </span>\n        </h4>\n    ",
            // Custom elements are inline by default
            styles: ["\n        :host { display: block; }\n    "]
        }), 
        __metadata('design:paramtypes', [stack_view_1.StackView])
    ], StackHeader);
    return StackHeader;
}());
exports.StackHeader = StackHeader;
