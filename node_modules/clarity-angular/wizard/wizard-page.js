"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require("@angular/core");
var tab_content_1 = require("../tabs/tab-content");
var WizardPage = (function (_super) {
    __extends(WizardPage, _super);
    function WizardPage() {
        _super.call(this);
        this.hasProjectedTitleContent = false;
        // User can bind his event handler for onCommit of the main content
        this.onCommit = new core_1.EventEmitter(false);
        // User can bind his/her event handler for onLoad of the main content
        this.onLoad = new core_1.EventEmitter(false);
        // input variable, optional, to set if this tab is skipped
        this.isSkipped = false;
        // input variable, optional, to set if this tab is skipped
        this.preventDefault = false;
        // Emitter for Next button state changes
        this.nextDisabledChanged = new core_1.EventEmitter(false);
    }
    WizardPage.prototype.ngOnInit = function () {
        var projectedTitleHTML = this.titleContainer.nativeElement.innerHTML.trim();
        this.hasProjectedTitleContent = projectedTitleHTML.length > 0;
    };
    __decorate([
        core_1.ViewChild("titleContainer"), 
        __metadata('design:type', core_1.ElementRef)
    ], WizardPage.prototype, "titleContainer", void 0);
    __decorate([
        core_1.Output("clrWizardPageOnCommit"), 
        __metadata('design:type', core_1.EventEmitter)
    ], WizardPage.prototype, "onCommit", void 0);
    __decorate([
        core_1.Output("clrWizardPageOnLoad"), 
        __metadata('design:type', core_1.EventEmitter)
    ], WizardPage.prototype, "onLoad", void 0);
    __decorate([
        core_1.Input("clrWizardPageIsSkipped"), 
        __metadata('design:type', Boolean)
    ], WizardPage.prototype, "isSkipped", void 0);
    __decorate([
        core_1.Input("clrWizardPagePreventDefault"), 
        __metadata('design:type', Boolean)
    ], WizardPage.prototype, "preventDefault", void 0);
    __decorate([
        core_1.Input("clrWizardPageNextDisabled"), 
        __metadata('design:type', Boolean)
    ], WizardPage.prototype, "nextDisabled", void 0);
    __decorate([
        core_1.Input("clrWizardPageErrorFlag"), 
        __metadata('design:type', Boolean)
    ], WizardPage.prototype, "errorFlag", void 0);
    __decorate([
        core_1.Output("clrWizardPageNextDisabledChanged"), 
        __metadata('design:type', core_1.EventEmitter)
    ], WizardPage.prototype, "nextDisabledChanged", void 0);
    WizardPage = __decorate([
        core_1.Component({
            selector: "clr-wizard-page",
            template: "\n      <section>\n          <label #titleContainer class=\"text-light\">\n              {{title}}\n              <ng-content select=\".wizard-page-title\"></ng-content>\n          </label>\n\n          <div class=\"content-wrapper\">\n              <ng-content></ng-content>\n          </div>\n      </section>\n    ",
            host: {
                "[id]": "id",
                "[class.clr-nav-content]": "true",
                "role": "tabpanel",
                "[attr.aria-hidden]": "!active",
                "[attr.aria-labelledby]": "ariaLabelledBy",
                "[attr.data-hidden]": "!active",
                "[class.active]": "active"
            }
        }), 
        __metadata('design:paramtypes', [])
    ], WizardPage);
    return WizardPage;
}(tab_content_1.TabContent));
exports.WizardPage = WizardPage;
