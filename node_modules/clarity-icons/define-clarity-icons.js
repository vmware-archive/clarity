"use strict";
/*
 * Copyright (c) 2016 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
var svg_icon_templates_1 = require("./svg-icon-templates");
var svg_img_icon_templates_1 = require("./svg-img-icon-templates");
var parentConstructor = function () {
    return HTMLElement.apply(this, arguments);
};
if (typeof Reflect === "object") {
    parentConstructor = function () {
        return Reflect.construct(HTMLElement, arguments, this.constructor);
    };
}
function ClarityIcon() {
    "use strict";
    return parentConstructor.apply(this, arguments);
}
ClarityIcon.observedAttributes = ["shape", "size"];
ClarityIcon.prototype = Object.create(HTMLElement.prototype);
ClarityIcon.prototype.constructor = ClarityIcon;
var generateIcon = function (element, shape) {
    shape = shape.split(/\s/)[0];
    if (shape !== element._shape) {
        element._shape = shape;
        element.innerHTML =
            svg_icon_templates_1.SVG_ICON_TEMPLATES[element._shape] ||
                svg_img_icon_templates_1.SVG_IMG_ICON_TEMPLATES[element._shape] ||
                (function () {
                    console.error("Error: '" + shape + "' is not found in the Clarity Icon set.");
                    return svg_icon_templates_1.SVG_ICON_TEMPLATES["error"];
                }());
    }
};
var setIconSize = function (element, size) {
    if (!Number(size) || Number(size) < 0) {
        element.style.width = null; // fallback to the original stylesheet value
        element.style.height = null; // fallback to the original stylesheet value
    }
    else {
        element.style.width = size + "px";
        element.style.height = size + "px";
    }
};
ClarityIcon.prototype.connectedCallback = function () {
    var host = this;
    if (host.hasAttribute("shape")) {
        generateIcon(host, host.getAttribute("shape"));
    }
    if (host.hasAttribute("size")) {
        setIconSize(host, host.getAttribute("size"));
    }
};
ClarityIcon.prototype.attributeChangedCallback = function (attributeName, oldValue, newValue) {
    var host = this;
    if (attributeName === "shape") {
        generateIcon(host, newValue);
    }
    if (attributeName === "size") {
        setIconSize(host, newValue);
    }
};
customElements.define("clr-icon", ClarityIcon);
