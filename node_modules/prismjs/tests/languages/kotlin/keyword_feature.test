abstract
annotation
as
break
by
catch
class
companion
const
constructor
continue
crossinline
data
do
else
enum
final
finally
for
fun
get
if
import
in
init
inline
inner
interface
internal
is
lateinit
noinline
null
object
open
out
override
package
private
protected
public
reified
return
sealed
set
super
tailrec
this
throw
to
try
val
var
when
where
while

----------------------------------------------------

[
	["keyword", "abstract"],
	["keyword", "annotation"],
	["keyword", "as"],
	["keyword", "break"],
	["keyword", "by"],
	["keyword", "catch"],
	["keyword", "class"],
	["keyword", "companion"],
	["keyword", "const"],
	["keyword", "constructor"],
	["keyword", "continue"],
	["keyword", "crossinline"],
	["keyword", "data"],
	["keyword", "do"],
	["keyword", "else"],
	["keyword", "enum"],
	["keyword", "final"],
	["keyword", "finally"],
	["keyword", "for"],
	["keyword", "fun"],
	["keyword", "get"],
	["keyword", "if"],
	["keyword", "import"],
	["keyword", "in"],
	["keyword", "init"],
	["keyword", "inline"],
	["keyword", "inner"],
	["keyword", "interface"],
	["keyword", "internal"],
	["keyword", "is"],
	["keyword", "lateinit"],
	["keyword", "noinline"],
	["keyword", "null"],
	["keyword", "object"],
	["keyword", "open"],
	["keyword", "out"],
	["keyword", "override"],
	["keyword", "package"],
	["keyword", "private"],
	["keyword", "protected"],
	["keyword", "public"],
	["keyword", "reified"],
	["keyword", "return"],
	["keyword", "sealed"],
	["keyword", "set"],
	["keyword", "super"],
	["keyword", "tailrec"],
	["keyword", "this"],
	["keyword", "throw"],
	["keyword", "to"],
	["keyword", "try"],
	["keyword", "val"],
	["keyword", "var"],
	["keyword", "when"],
	["keyword", "where"],
	["keyword", "while"]
]

----------------------------------------------------

Checks for keywords.