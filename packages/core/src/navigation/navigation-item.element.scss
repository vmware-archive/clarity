/*!
 * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */

@import './../styles/tokens/generated/index';

:host {
  --color: inherit;
  --line-height: inherit;
  --focus-width: #{$cds-alias-object-border-width-300};
  --font-size: inherit;
  --font-weight: inherit;
  --letter-spacing: inherit;
  --padding: inherit;
  padding-left: var(--focus-width);
}

:host(:hover:not([disabled])),
:host([_has-focus]) {
  background: #{$cds-alias-object-interaction-background-hover};
  outline: 0;
  cursor: pointer;
}

:host(:hover:not([disabled]))::after,
:host([_has-focus])::after {
  content: '';
  position: absolute;
  inset: #{$cds-global-space-2};
  outline: #{$cds-global-space-2} auto -webkit-focus-ring-color;
}

:host([active]) {
  background: #{$cds-alias-object-interaction-background-selected};
  padding-left: 0;
  border-left: var(--focus-width) solid #{$cds-alias-object-interaction-background-highlight};
}

:host([_has-focus][active]) {
  background: #{$cds-alias-object-interaction-background-hover};
  border-color: transparent;
}

/**
  NOTE: the use of active is in a very specific context that makes it easy for consumers
        to use the active attribute to indicate the selected route, e.g similar to the syntax of the angular router
        tl;dr - there is naming confusion for us, but externally [active] is more consistent
        with how routing in angular works
 */
:host(:active),
:host(:active:focus) {
  background: #{$cds-alias-object-interaction-background-active};
}

:host([selected]) {
  background: #{$cds-alias-object-interaction-background-selected};
}

:host([disabled]) {
  --color: #{$cds-alias-object-interaction-color-disabled};

  // disabled items should not respond to hover
  &:hover {
    --background: inherit;
  }

  ::slotted(a) {
    cursor: not-allowed;
  }
}

::slotted(cds-icon) {
  color: inherit;
}

// These are not our elements and the consumer can easily override us here.
::slotted(a) {
  color: var(--color) !important;
  padding: var(--padding) !important;
  text-decoration: none !important;
}

.private-host {
  font-size: var(--font-size);
  font-weight: var(--font-weight);
  letter-spacing: var(--letter-spacing);
  line-height: var(--line-height);
  width: 100%;
  height: fit-content;
}
