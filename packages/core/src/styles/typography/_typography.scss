// Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.
// This software is released under MIT license.
// The full license information can be found in LICENSE in the root directory of this project.

@import './../mixins/mixins';

@mixin LHE($lh-gap: 0.5em) {
  @include line-height-eraser(
    $lh-gap,
    $cds-token-global-font-top-gap-height,
    $cds-token-global-font-ascender-height,
    $cds-token-global-font-x-height
  );
}

[cds-text] {
  font-family: $cds-token-typography-font-family;
  margin-top: 0;
  margin-bottom: 0;

  // remove as they cause excess gap when combined with cds-layout on the same element
  &[cds-layout~='vertical'],
  &[cds-layout~='horizontal'],
  &[cds-layout~='grid'] {
    &::before,
    &::after {
      display: none;
    }
  }
}

[cds-text*='display'],
[cds-text*='heading'],
[cds-text*='title'],
[cds-text*='section'],
[cds-text*='subsection'] {
  font-family: $cds-token-typography-header-font-family;
}

[cds-text*='inline'] {
  width: auto !important;
  display: inline-block !important;
}

// LEGACY FONT STYLES

[cds-text*='h0'] {
  $lh-gap: getLineHeightGap($cds-token-typography-h0-line-height-static, $cds-token-typography-h0-line-height);
  @include LHE($lh-gap);

  font-family: $cds-token-typography-header-font-family;
  font-size: $cds-token-typography-h0-font-size;
  font-weight: $cds-token-typography-h0-font-weight;
  color: $cds-token-typography-h0-color;
  line-height: $cds-token-typography-h0-line-height;
  letter-spacing: $cds-token-typography-h0-letter-spacing;
}

[cds-text*='h1'] {
  $lh-gap: getLineHeightGap($cds-token-typography-h1-line-height-static, $cds-token-typography-h1-line-height);
  @include LHE($lh-gap);

  font-family: $cds-token-typography-header-font-family;
  font-size: $cds-token-typography-h1-font-size;
  font-weight: $cds-token-typography-h1-font-weight;
  color: $cds-token-typography-h1-color;
  line-height: $cds-token-typography-h1-line-height;
  letter-spacing: $cds-token-typography-h1-letter-spacing;
}

[cds-text*='h2'] {
  $lh-gap: getLineHeightGap($cds-token-typography-h2-line-height-static, $cds-token-typography-h2-line-height);
  @include LHE($lh-gap);

  font-family: $cds-token-typography-header-font-family;
  font-size: $cds-token-typography-h2-font-size;
  font-weight: $cds-token-typography-h2-font-weight;
  color: $cds-token-typography-h2-color;
  line-height: $cds-token-typography-h2-line-height;
  letter-spacing: $cds-token-typography-h2-letter-spacing;
}

[cds-text*='h3'] {
  $lh-gap: getLineHeightGap($cds-token-typography-h3-line-height-static, $cds-token-typography-h3-line-height);
  @include LHE($lh-gap);

  font-family: $cds-token-typography-header-font-family;
  font-size: $cds-token-typography-h3-font-size;
  font-weight: $cds-token-typography-h3-font-weight;
  color: $cds-token-typography-h3-color;
  line-height: $cds-token-typography-h3-line-height;
  letter-spacing: $cds-token-typography-h3-letter-spacing;
}

[cds-text*='h4'] {
  $lh-gap: getLineHeightGap($cds-token-typography-h4-line-height-static, $cds-token-typography-h4-line-height);
  @include LHE($lh-gap);

  font-family: $cds-token-typography-header-font-family;
  font-size: $cds-token-typography-h4-font-size;
  font-weight: $cds-token-typography-h4-font-weight;
  color: $cds-token-typography-h4-color;
  line-height: $cds-token-typography-h4-line-height;
  letter-spacing: $cds-token-typography-h4-letter-spacing;
}

[cds-text*='h5'] {
  $lh-gap: getLineHeightGap($cds-token-typography-h5-line-height-static, $cds-token-typography-h5-line-height);
  @include LHE($lh-gap);

  font-family: $cds-token-typography-header-font-family;
  font-size: $cds-token-typography-h5-font-size;
  font-weight: $cds-token-typography-h5-font-weight;
  color: $cds-token-typography-h5-color;
  line-height: $cds-token-typography-h5-line-height;
  letter-spacing: $cds-token-typography-h5-letter-spacing;
}

[cds-text*='h6'] {
  $lh-gap: getLineHeightGap($cds-token-typography-h6-line-height-static, $cds-token-typography-h6-line-height);
  @include LHE($lh-gap);

  font-family: $cds-token-typography-header-font-family;
  font-size: $cds-token-typography-h6-font-size;
  font-weight: $cds-token-typography-h6-font-weight;
  color: $cds-token-typography-h6-color;
  line-height: $cds-token-typography-h6-line-height;
  letter-spacing: $cds-token-typography-h6-letter-spacing;
}

[cds-text*='p0'] {
  $lh-gap: getLineHeightGap($cds-token-typography-p0-line-height-static, $cds-token-typography-p0-line-height);
  @include LHE($lh-gap);

  font-size: $cds-token-typography-p0-font-size;
  font-weight: $cds-token-typography-p0-font-weight;
  color: $cds-token-typography-p0-color;
  line-height: $cds-token-typography-p0-line-height;
  letter-spacing: $cds-token-typography-p0-letter-spacing;
}

[cds-text*='p1'] {
  $lh-gap: getLineHeightGap($cds-token-typography-p1-line-height-static, $cds-token-typography-p1-line-height);
  @include LHE($lh-gap);

  font-size: $cds-token-typography-p1-font-size;
  font-weight: $cds-token-typography-p1-font-weight;
  color: $cds-token-typography-p1-color;
  line-height: $cds-token-typography-p1-line-height;
  letter-spacing: $cds-token-typography-p1-letter-spacing;
}

[cds-text*='p2'] {
  $lh-gap: getLineHeightGap($cds-token-typography-p2-line-height-static, $cds-token-typography-p2-line-height);
  @include LHE($lh-gap);

  font-size: $cds-token-typography-p2-font-size;
  font-weight: $cds-token-typography-p2-font-weight;
  color: $cds-token-typography-p2-color;
  line-height: $cds-token-typography-p2-line-height;
  letter-spacing: $cds-token-typography-p2-letter-spacing;
}

[cds-text*='p3'] {
  $lh-gap: getLineHeightGap($cds-token-typography-p3-line-height-static, $cds-token-typography-p3-line-height);
  @include LHE($lh-gap);

  font-size: $cds-token-typography-p3-font-size;
  font-weight: $cds-token-typography-p3-font-weight;
  color: $cds-token-typography-p3-color;
  line-height: $cds-token-typography-p3-line-height;
  letter-spacing: $cds-token-typography-p3-letter-spacing;
}

[cds-text*='p4'] {
  $lh-gap: getLineHeightGap($cds-token-typography-p4-line-height-static, $cds-token-typography-p4-line-height);
  @include LHE($lh-gap);

  font-size: $cds-token-typography-p4-font-size;
  font-weight: $cds-token-typography-p4-font-weight;
  color: $cds-token-typography-p4-color;
  line-height: $cds-token-typography-p4-line-height;
  letter-spacing: $cds-token-typography-p4-letter-spacing;
}

[cds-text*='p5'] {
  $lh-gap: getLineHeightGap($cds-token-typography-p5-line-height-static, $cds-token-typography-p5-line-height);
  @include LHE($lh-gap);

  font-size: $cds-token-typography-p5-font-size;
  font-weight: $cds-token-typography-p5-font-weight;
  color: $cds-token-typography-p5-color;
  line-height: $cds-token-typography-p5-line-height;
  letter-spacing: $cds-token-typography-p5-letter-spacing;
}

[cds-text*='p6'] {
  $lh-gap: getLineHeightGap($cds-token-typography-p6-line-height-static, $cds-token-typography-p6-line-height);
  @include LHE($lh-gap);

  font-size: $cds-token-typography-p6-font-size;
  font-weight: $cds-token-typography-p6-font-weight;
  color: $cds-token-typography-p6-color;
  line-height: $cds-token-typography-p6-line-height;
  letter-spacing: $cds-token-typography-p6-letter-spacing;
}

[cds-text*='p7'] {
  $lh-gap: getLineHeightGap($cds-token-typography-p7-line-height-static, $cds-token-typography-p7-line-height);
  @include LHE($lh-gap);

  font-size: $cds-token-typography-p7-font-size;
  font-weight: $cds-token-typography-p7-font-weight;
  color: $cds-token-typography-p7-color;
  line-height: $cds-token-typography-p7-line-height;
  letter-spacing: $cds-token-typography-p7-letter-spacing;
}

[cds-text*='p8'] {
  $lh-gap: getLineHeightGap($cds-token-typography-p8-line-height-static, $cds-token-typography-p8-line-height);
  @include LHE($lh-gap);

  font-size: $cds-token-typography-p8-font-size;
  font-weight: $cds-token-typography-p8-font-weight;
  color: $cds-token-typography-p8-color;
  line-height: $cds-token-typography-p8-line-height;
  letter-spacing: $cds-token-typography-p8-letter-spacing;
}

// NEW FONT STYLES

[cds-text*='display'] {
  $lh-gap: getLineHeightGap(
    $cds-token-typography-display-line-height-static,
    $cds-token-typography-display-line-height
  );
  @include LHE($lh-gap);

  font-size: $cds-token-typography-display-font-size;
  font-weight: $cds-token-typography-display-font-weight;
  color: $cds-token-typography-display-color;
  line-height: $cds-token-typography-display-line-height;
  letter-spacing: $cds-token-typography-display-letter-spacing;
}

[cds-text*='heading'] {
  $lh-gap: getLineHeightGap(
    $cds-token-typography-heading-line-height-static,
    $cds-token-typography-heading-line-height
  );
  @include LHE($lh-gap);

  font-size: $cds-token-typography-heading-font-size;
  font-weight: $cds-token-typography-heading-font-weight;
  color: $cds-token-typography-heading-color;
  line-height: $cds-token-typography-heading-line-height;
  letter-spacing: $cds-token-typography-heading-letter-spacing;
}

[cds-text*='title'] {
  $lh-gap: getLineHeightGap($cds-token-typography-title-line-height-static, $cds-token-typography-title-line-height);
  @include LHE($lh-gap);

  font-size: $cds-token-typography-title-font-size;
  font-weight: $cds-token-typography-title-font-weight;
  color: $cds-token-typography-title-color;
  line-height: $cds-token-typography-title-line-height;
  letter-spacing: $cds-token-typography-title-letter-spacing;
}

[cds-text*='section'] {
  $lh-gap: getLineHeightGap(
    $cds-token-typography-section-line-height-static,
    $cds-token-typography-section-line-height
  );
  @include LHE($lh-gap);

  font-size: $cds-token-typography-section-font-size;
  font-weight: $cds-token-typography-section-font-weight;
  color: $cds-token-typography-section-color;
  line-height: $cds-token-typography-section-line-height;
  letter-spacing: $cds-token-typography-section-letter-spacing;
}

[cds-text*='subsection'] {
  $lh-gap: getLineHeightGap(
    $cds-token-typography-subsection-line-height-static,
    $cds-token-typography-subsection-line-height
  );
  @include LHE($lh-gap);

  font-size: $cds-token-typography-subsection-font-size;
  font-weight: $cds-token-typography-subsection-font-weight;
  color: $cds-token-typography-subsection-color;
  line-height: $cds-token-typography-subsection-line-height;
  letter-spacing: $cds-token-typography-subsection-letter-spacing;
}

[cds-text*='body'] {
  color: $cds-token-typography-body-color;
  font-weight: $cds-token-typography-body-font-weight;
  font-size: $cds-token-typography-body-font-size;
  letter-spacing: $cds-token-typography-body-letter-spacing;
  line-height: $cds-token-typography-body-line-height;
}

[cds-text*='body'] {
  $lh-gap: getLineHeightGap($cds-token-typography-body-line-height-static, $cds-token-typography-body-line-height);
  @include line-height-eraser(
    $lh-gap,
    $cds-token-global-font-top-gap-height,
    $cds-token-global-font-ascender-height,
    $cds-token-global-font-x-height,
    0.1em
  );
}

[cds-text*='message'] {
  $lh-gap: getLineHeightGap(
    $cds-token-typography-message-line-height-static,
    $cds-token-typography-message-line-height
  );
  @include LHE($lh-gap);

  font-size: $cds-token-typography-message-font-size;
  font-weight: $cds-token-typography-message-font-weight;
  color: $cds-token-typography-message-color;
  line-height: $cds-token-typography-message-line-height;
  letter-spacing: $cds-token-typography-message-letter-spacing;
}

[cds-text*='secondary'] {
  $lh-gap: getLineHeightGap(
    $cds-token-typography-secondary-line-height-static,
    $cds-token-typography-secondary-line-height
  );
  @include LHE($lh-gap);

  font-size: $cds-token-typography-secondary-font-size;
  font-weight: $cds-token-typography-secondary-font-weight;
  color: $cds-token-typography-secondary-color;
  line-height: $cds-token-typography-secondary-line-height;
  letter-spacing: $cds-token-typography-secondary-letter-spacing;
}

[cds-text*='caption'] {
  $lh-gap: getLineHeightGap(
    $cds-token-typography-caption-line-height-static,
    $cds-token-typography-caption-line-height
  );
  @include LHE($lh-gap);

  font-size: $cds-token-typography-caption-font-size;
  font-weight: $cds-token-typography-caption-font-weight;
  color: $cds-token-typography-caption-color;
  line-height: $cds-token-typography-caption-line-height;
  letter-spacing: $cds-token-typography-caption-letter-spacing;
}

[cds-text*='smallcaption'] {
  $lh-gap: getLineHeightGap(
    $cds-token-typography-smallcaption-line-height-static,
    $cds-token-typography-smallcaption-line-height
  );
  @include LHE($lh-gap);

  font-size: $cds-token-typography-smallcaption-font-size;
  font-weight: $cds-token-typography-smallcaption-font-weight;
  color: $cds-token-typography-smallcaption-color;
  line-height: $cds-token-typography-smallcaption-line-height;
  letter-spacing: $cds-token-typography-smallcaption-letter-spacing;
}

[cds-text~='link'] {
  color: $cds-token-color-action-600 !important;
  text-decoration: underline !important;
  line-height: inherit !important;
  font-size: inherit !important;
}

[cds-text~='code'] {
  color: $cds-token-color-danger-800;
  font-family: monospace;
  font-size: 1.1em;
}

// hr
[cds-divider] {
  display: block;
  height: $cds-token-space-size-1;
  overflow: hidden;
  box-shadow: $cds-token-color-neutral-300 0 0 0 $cds-token-space-size-1 inset;
}

// font-weight

[cds-text~='extrabold'] {
  font-weight: $cds-token-typography-font-weight-extrabold !important;
}

[cds-text~='bold'] {
  font-weight: $cds-token-typography-font-weight-bold !important;
}

[cds-text~='semibold'] {
  font-weight: $cds-token-typography-font-weight-semibold !important;
}

[cds-text~='medium'] {
  font-weight: $cds-token-typography-font-weight-medium !important;
}

[cds-text~='regular'] {
  font-weight: $cds-token-typography-font-weight-regular !important;
}

[cds-text~='light'] {
  font-weight: $cds-token-typography-font-weight-light !important;
}

// transforms

[cds-text~='capitalize'] {
  text-transform: capitalize !important;
}

[cds-text~='uppercase'] {
  text-transform: uppercase !important;
}

[cds-text~='lowercase'] {
  text-transform: lowercase !important;
}

// truncation

[cds-text~='truncate'] {
  overflow: hidden !important;
  text-overflow: ellipsis !important;
  white-space: nowrap !important;
}

// alignment

[cds-text~='justify'] {
  text-align: justify !important;
}

[cds-text~='left'] {
  text-align: left !important;
}

[cds-text~='right'] {
  text-align: right !important;
}

[cds-text~='center'] {
  text-align: center !important;
}

// remove line-height eraser from element
[cds-text~='disable-lhe'] {
  @include remove-line-height-erasers;
}
