@import './../styles/tokens/generated/index';
@import './../styles/mixins/mixins';

:host {
  --background: none;
  --color: #{$cds-token-color-neutral-800};
  --padding: 0 #{$cds-token-space-size-2};
  --size: #{$cds-token-space-size-8-static + $cds-token-space-size-3-static};
  --font-size: #{($cds-token-space-size-8-static + $cds-token-space-size-2-static) / 2 + $cds-token-space-size-1-static};
  --border-radius: calc(var(--size) / 2);
  --border-color: #{$cds-token-color-neutral-800};
  --border-width: #{$cds-token-global-border-width};

  display: inline-block;
  height: var(--size);
}

.private-host {
  @include vertical-center-content;

  line-height: 1em;
  border-radius: var(--border-radius);
  background: var(--background);
  border-width: var(--border-width);
  border-style: solid;
  border-color: var(--border-color);
  color: var(--color);
  font-size: var(--font-size);
  padding: var(--padding);
  height: var(--size);
  white-space: nowrap;

  .tag-icon,
  .tag-badge,
  .tag-content,
  .tag-close-icon {
    @include vertical-center-content;
    height: calc(var(--size) - #{$cds-token-space-size-2});
  }

  .tag-badge {
    height: calc(var(--size) - #{$cds-token-space-size-1});
  }

  ::slotted(cds-badge) {
    transform: translateY(calc(-1 - #{$cds-token-space-size-2}));
    --size: #{$cds-token-space-size-7};
  }

  .tag-badge {
    transform: translateY(calc(-1 * #{$cds-token-space-size-1}));

    // using empty containers here b/c firefox doesn't align text-only
    // tags correctly alongside tags with containers in them
    &.empty {
      visibility: hidden;
      width: #{$cds-token-space-size-1};
    }
  }

  .tag-content {
    padding: 0 #{$cds-token-space-size-4};
  }

  .tag-icon {
    overflow: hidden;
    width: calc(var(--size) - (2 * var(--border-width) + (2 * #{$cds-token-space-size-1})));

    // using empty containers here b/c firefox doesn't align text-only
    // tags correctly alongside tags with containers in them
    &.empty {
      visibility: hidden;
      width: #{$cds-token-space-size-2};
    }
  }

  .tag-close-icon {
    overflow: hidden;
    width: calc(var(--size) - #{$cds-token-space-size-3});

    cds-icon {
      cursor: pointer;
    }
  }

  .tag-icon + .tag-content {
    padding-left: calc(#{$cds-token-space-size-4} / 2);
  }
}

// style for clickable tag
:host(:not([readonly])) .private-host {
  text-decoration: none;
}

:host([disabled]) {
  --background: #{$cds-token-color-neutral-200} !important;
  --color: #{$cds-token-color-neutral-600} !important;
  --border-color: #{$cds-token-color-neutral-600} !important;

  &:host([active]),
  &:host(:active) {
    .private-host {
      box-shadow: none !important;
    }

    .tag-content {
      transform: initial !important;
    }
  }
}

:host(:not([readonly])),
:host([is-anchor]) {
  &:host([active]),
  &:host(:hover),
  &:host(:focus),
  &:host(:active) {
    --background: #{$cds-token-color-neutral-200};
  }

  &:host([active]),
  &:host(:active) {
    .private-host {
      box-shadow: 0 #{$cds-token-space-size-1-static} 0 0 var(--border-color) inset;
    }

    .tag-content {
      transform: translateY(0.05rem);
    }
  }

  &:host(:visited) {
    color: var(--color);
  }
}

::slotted(cds-icon) {
  @include equilateral(calc(var(--size) - #{$cds-token-space-size-3}));
  margin-bottom: 1px;
  fill: var(--color);
}

:host([color='purple']) {
  --border-color: #{$cds-token-color-secondary-action-500};

  ::slotted(cds-badge) {
    --background: #{$cds-token-color-secondary-action-500};
    --border-color: #{$cds-token-color-secondary-action-500};
    --color: #{$cds-token-color-neutral-0};
  }
}

:host([color='blue']) {
  --border-color: #{$cds-token-color-action-800};

  ::slotted(cds-badge) {
    --background: #{$cds-token-color-action-800};
    --border-color: #{$cds-token-color-action-800};
    --color: #{$cds-token-color-neutral-0};
  }
}

:host([color='orange']) {
  --border-color: #{$cds-token-color-warning-1000};

  ::slotted(cds-badge) {
    --background: #{$cds-token-color-warning-1000};
    --border-color: #{$cds-token-color-warning-1000};
    --color: #{$cds-token-color-neutral-0};
  }
}

:host([color='light-blue']) {
  --border-color: #{$cds-token-color-action-500};

  ::slotted(cds-badge) {
    --background: #{$cds-token-color-action-500};
    --border-color: #{$cds-token-color-action-500};
    --color: #{$cds-token-color-neutral-0};
  }
}

:host([status='info']) {
  --background: #{$cds-token-color-action-50};
  --border-color: #{$cds-token-color-action-800};
  --color: #{$cds-token-color-action-800};

  ::slotted(cds-badge) {
    --background: #{$cds-token-color-action-800};
    --border-color: #{$cds-token-color-action-800};
    --color: #{$cds-token-color-neutral-0};
  }

  ::slotted(cds-icon) {
    fill: #{$cds-token-color-action-800};
  }
}

:host(:not([readonly])),
:host([is-anchor]) {
  &:host([status='info'][active]),
  &:host([status='info']:hover),
  &:host([status='info']:focus),
  &:host([status='info']:active) {
    --background: #{$cds-token-color-action-100};
  }
}

:host([status='success']) {
  --background: #{$cds-token-color-success-50};
  --color: #{$cds-token-color-success-800};
  --border-color: #{$cds-token-color-success-800};

  ::slotted(cds-badge) {
    --background: #{$cds-token-color-success-800};
    --border-color: #{$cds-token-color-success-800};
    --color: #{$cds-token-color-neutral-0};
  }

  ::slotted(cds-icon) {
    fill: #{$cds-token-color-success-800};
  }
}

:host(:not([readonly])),
:host([is-anchor]) {
  &:host([status='success'][active]),
  &:host([status='success']:hover),
  &:host([status='success']:focus),
  &:host([status='success']:active) {
    --background: #{$cds-token-color-success-100};
  }
}

:host([status='warning']) {
  --background: #{$cds-token-color-warning-100};
  --color: #{$cds-token-color-neutral-900};
  --border-color: #{$cds-token-color-warning-800};

  ::slotted(cds-badge) {
    --background: #{$cds-token-color-warning-1000};
    --border-color: #{$cds-token-color-warning-1000};
    --color: #{$cds-token-color-neutral-0};
  }

  ::slotted(cds-icon) {
    fill: #{$cds-token-color-warning-800};
  }
}

:host(:not([readonly])),
:host([is-anchor]) {
  &:host([status='warning'][active]),
  &:host([status='warning']:hover),
  &:host([status='warning']:focus),
  &:host([status='warning']:active) {
    --background: #{$cds-token-color-warning-200};
    --border-color: #{$cds-token-color-warning-500};
  }
}

:host([status='danger']) {
  --background: #{$cds-token-color-danger-100};
  --color: #{$cds-token-color-danger-900};
  --border-color: #{$cds-token-color-danger-900};

  ::slotted(cds-badge) {
    --background: #{$cds-token-color-danger-900};
    --border-color: #{$cds-token-color-danger-900};
    --color: #{$cds-token-color-neutral-0};
  }

  ::slotted(cds-icon) {
    fill: #{$cds-token-color-danger-900};
  }
}

:host([color='gray']),
:host([disabled]) {
  --border-color: #{$cds-token-color-neutral-600};

  ::slotted(cds-badge) {
    --background: #{$cds-token-color-neutral-600};
    --border-color: #{$cds-token-color-neutral-600};
    --color: #{$cds-token-color-neutral-0};
  }
}

:host(:not([readonly])),
:host([is-anchor]) {
  &:host([status='danger'][active]),
  &:host([status='danger']:hover),
  &:host([status='danger']:focus),
  &:host([status='danger']:active) {
    --background: #{$cds-token-color-danger-200};
    --border-color: #{$cds-token-color-danger-400};
  }
}

// Hack for Safari; It is having a problem with layouts across the shadowDom
@media not all and (min-resolution: 0.001dpcm) {
  @supports (-webkit-appearance: none) {
    ::slotted(cds-badge) {
      transform: translateY(calc(0.04545 * var(--size)));
    }
  }
}
