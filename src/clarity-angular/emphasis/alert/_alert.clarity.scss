// Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.
// This software is released under MIT license.
// The full license information can be found in LICENSE in the root directory of this project.

$clr-app-level-alert-color: $clr-white !default;
$clr-icon-margin-right: $clr_baselineRem_0_25;

//Regular Alert
$clr-alert-top-margin: $clr_baselineRem_0_25;
$clr-alert-min-height: $clr_baselineRem_1_5;
$clr-alert-horizontal-padding: $clr_baselineRem_0_5;
$clr-alert-top-padding: $clr_baselineRem_0_125;
$clr-alert-bottom-padding: $clr_baselineRem_0_375;
$clr-alert-item-min-height: $clr-alert-icon-dimension-sm;

$clr-alert-colors: (
        info: (
                background: $clr-action-blue-lightest,
                font: $clr-dark-gray,
                border: $clr-action-blue-light,
                icon-color: $clr-action-blue
        ),
        success: (
                background: $clr-green-lightest,
                font: $clr-dark-gray,
                border: $clr-green,
                icon-color: $clr-green-dark-midtone
        ),
        warning: (
                background: $clr-yellow-lighter,
                font: $clr-dark-gray,
                border: $clr-yellow,
                icon-color: $clr-dark-gray
        ),
        danger: (
                background: $clr-red-lighter,
                font: $clr-dark-gray,
                border: $clr-red-light,
                icon-color: $clr-red
        ),
        app-info: (
                background: $clr-action-blue,
                font: $clr-app-level-alert-color,
                border: none,
                icon-color: $clr-app-level-alert-color
        ),
        app-success: (
                background: $clr-green-light-midtone,
                font: $clr-app-level-alert-color,
                border: none,
                icon-color: $clr-app-level-alert-color
        ),
        app-warning: (
                background: $clr-yellow-dark,
                font: $clr-app-level-alert-color,
                border: none,
                icon-color: $clr-app-level-alert-color
        ),
        app-danger: (
                background: $clr-red,
                font: $clr-app-level-alert-color,
                border: none,
                icon-color: $clr-app-level-alert-color
        )
) !default;

@mixin generateAlertType($alertType: "info") {
    $propMap: map-get($clr-alert-colors, $alertType);
    background: map-get($propMap, background);
    color: map-get($propMap, font);
    $border-prop: map-get($propMap, border);

    @if $border-prop != "none" {
        border: 1px solid $border-prop;
    }

    @else {
        border: none;
    }

    .alert-icon {
        color: map-get($propMap, icon-color)
    }
}

@include exports('alert.clarity') {
    $alertIconWidth: $clr_baselineRem_1 + 1;

    .alert-icon {
        $alert-icon-dim: $clr_baselineRem_1;
        height: $alert-icon-dim;
        width: $alert-icon-dim;
        margin-left: -1 * ($clr_baselineRem_1/8);
        margin-top: -1 * ($clr_baselineRem_1/6);
    }

    .alert-icon-wrapper {
        flex: 0 0 $alertIconWidth;
        padding-top: 1px;
        height: $clr_baselineRem_0_75;
    }

    .alert-item {
        flex: 1 1 auto;
        display: flex;
        flex-wrap: nowrap;
        min-height: $clr-alert-item-min-height;
        margin-bottom: $clr_baselineRem_0_25;

        &:last-child {
            margin-bottom: 0;
        }
    }

    .alert-items {
        // -1 is for the border; specs count border as part of spacing;
        $vertPadding: $clr_baselineRem_0_25 - 1 + ($clr_baselineRem_0_25/2);
        $horizPadding: $clr_baselineRem_0_5 - 1;
        flex: 1 1 auto;
        flex-flow: column nowrap;
        padding: $vertPadding $horizPadding;
        display: flex;
    }

    //display: inline-block and max-width were specifically added for IE 10.
    //Flexbox content wouldn't wrap otherwise :(. 98% was just an estimate to distance the text from the
    //close alert button.
    .alert-item > span,
    .alert-text {
        display: inline-block;
        flex-grow: 1;
        flex-shrink: 1;
        flex-basis: 98%; //needed for IE11
        max-width: 98%;
        margin-right: $clr_baselineRem_0_5;
        text-align: left;
    }

    .alert {
        @include clr-getTypePropertiesForDomElement(alert_text, (font-size, letter-spacing));
        line-height: $clr_baselineRem_0_75;
        position: relative;
        box-sizing: border-box;
        display: flex;
        flex-direction: row;
        width: auto;
        border-radius: $clr-default-borderradius;
        margin-top: $clr-alert-top-margin;

        @include generateAlertType(info);

        &.alert-info {
            @include generateAlertType(info);
        }

        &.alert-success {
            @include generateAlertType(success);
        }

        &.alert-warning {
            @include generateAlertType(warning);
        }

        &.alert-danger {
            @include generateAlertType(danger);
        }

        .alert-item {
            .clr-icon {
                height: $clr-alert-icon-dimension-sm;
                width: $clr-alert-icon-dimension-sm;
                margin-right: $clr-icon-margin-right;
            }

            .clr-icon + .alert-text {
                padding-left: 0;

                &::before {
                    content: none;
                }
            }
        }

        .alert-actions {
            flex: 0 0 auto;
            white-space: nowrap;

            .dropdown:last-child {
                // used to align far-right dropdown inside an alert
                margin-right: -2px;
            }

            .dropdown-item {
                @include clr-getTypePropertiesForDomElement(dropdown_text, (color, font-size, line-height, letter-spacing));
            }
        }

        .alert-action:not(:last-child) {
            margin-right: $clr_baselineRem_0_5;
        }

        .alert-action,
        .dropdown-toggle {
            color: $clr-dark-gray;
            text-decoration: underline;

            &:active {
                color: $action-purples-darker;
            }
        }

        .dropdown-toggle:not(.btn) {
            display: inline-block;
            background: transparent;
            border: none;
        }

        .close {
            $closeBtnNudge: $clr_baselineRem_1/6;
            width: $clr_baselineRem_1;
            display: block;
            height: $clr_baselineRem_1_5;
            flex: 0 0 ($clr_baselineRem_1 + $closeBtnNudge);
            order: 100;
            padding-right: $clr_baselineRem_1/6;

            clr-icon {
                $alert-close-icon-dims: $clr_baselineRem_1 - $closeBtnNudge;
                margin-top: -1 * ($clr_baselineRem_0_25 - 1);
                height: $alert-close-icon-dims;
                width: $alert-close-icon-dims;
            }
        }

        .close ~ .alert-item > .alert-actions {
            padding-right: $clr_baselineRem_0_5;

            & > .alert-action:last-child {
                margin-right: $clr_baselineRem_0_5;
            }
        }
    }

    .alert-app-level {
        margin: 0;
        border: none;
        border-radius: 0;
        max-height: $clr_baselineRem_4;
        overflow-y: auto;

        @include generateAlertType(app-info);

        &.alert-info {
            @include generateAlertType(app-info);
        }

        &.alert-danger {
            @include generateAlertType(app-danger);
        }

        &.alert-warning {
            @include generateAlertType(app-warning);
        }

        &.alert-success {
            @include generateAlertType(app-success);
        }

        .alert-items {
            // line-height of 24px on .alert-item inside app-level-alert
            // blows out the sizing, so we need vert-padding to be 6px, not 8px
            $appLevelAlertVertPadding: $clr_baselineRem_0_25;
            padding-top: $appLevelAlertVertPadding;
            padding-bottom: $appLevelAlertVertPadding;
        }

        .alert-item {
            justify-content: center;
            align-items: center;
            min-height: $clr_baselineRem_1;

            .btn {
                @extend .btn-inverse;
                @extend .btn-sm;
                margin: 0;
            }
        }

        .alert-item > span, .alert-text {
            flex: 0 0 auto;
        }

        .close {
            color: $clr-app-level-alert-color;
            opacity: 0.8;
            height: $clr_baselineRem_1_5;

            clr-icon {
                fill: $clr-app-level-alert-color;
                margin-top: -3px;
            }

            &:focus,
            &:hover,
            &:active {
                opacity: 1;
            }
        }

        .alert-action,
        .dropdown-toggle {
            text-decoration: none;
        }
    }

    .alert-sm {
        $alertSmallLineHeight: 0.667 * $clr_baselineRem_1;
        $alertSmallNudge: $clr_baselineRem_1/6; // basically 4px

        @include clr-getTypePropertiesForDomElement(alert-small_text, (letter-spacing));

        // need to use 11 instead of 12 here or else vertical alignment is thrown off
        // by a pixel due to improper browser rounding; browsers aren't rendering on the
        // sub-pixel required but rounding up to the nearest whole pixel...
        font-size: $clr_baselineRem_0_5 - 1;

        line-height: $alertSmallLineHeight;

        .alert-items {
            $alertSmallVertPadding: $alertSmallNudge - 1;
            $alertSmallHorizPadding: $clr_baselineRem_0_25 - 1; // -1 due to borders
            padding: $alertSmallVertPadding $alertSmallHorizPadding;
        }

        .alert-item {
            padding-top: 1px;
            margin-bottom: $alertSmallNudge;

            &:last-child {
                margin-bottom: 0;
            }
        }

        .alert-icon-wrapper {
            padding-top: 0;
            height: $alertSmallLineHeight;
        }

        .alert-icon {
            margin-left: -1 * $alertSmallNudge;
            margin-top: -1 * ($clr_baselineRem_1/6);
        }

        .alert-item > span, .alert-text {
            margin-right: $clr_baselineRem_0_25;
        }

        .close {
            padding-right: 0;
            flex: 0 0 $clr_baselineRem_1;
            height: $clr_baselineRem_1;

            clr-icon {
                margin-top: -3px;
                margin-right: -1px;
            }
        }
    }

    @media screen and (max-width: map-get($clr-breakpoints, medium)) {
        .alert {
            .alert-item {
                flex-wrap: wrap;
            }

            .alert-text {
                margin-right: 0;
                //90% was just an estimate to distance the text from the
                //close alert button on medium and smaller breakpoints.
                max-width: 90%;
                //needed for safari
                width: 90%;
                flex-basis: 90%;
            }

            .alert-actions {
                flex: 1 0 100%;
                padding-top: $clr_baselineRem_0_125;
                padding-left: $clr-alert-icon-dimension-sm + $clr-icon-margin-right;
            }
        }

        .alert-app-level {
            .alert-actions {
                margin-left: 0;
            }
        }
    }

    //alert padding/margin adjustments
    //1.cards
    .card {
        .alert {
            $clr-alert-card-horizontal-margin: 0;
            $clr-alert-card-vertical-margin: $clr_baselineRem_0_25;
            margin: $clr-alert-card-vertical-margin $clr-alert-card-horizontal-margin;
        }
    }

    //2. Modal
    .modal {
        .alert + .modal-header {
            margin-top: $clr_baselineRem_0_5;
        }
    }
}
