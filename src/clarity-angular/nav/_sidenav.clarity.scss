// Copyright (c) 2016 VMware, Inc. All Rights Reserved.
// This software is released under MIT license.
// The full license information can be found in LICENSE in the root directory of this project.

$clr-sidenav-border-color: $clr-light-midtone-gray !default;

@mixin nav-link-colors {
    &:hover {
        background: $gray-light;
    }

    &.active {
        background: $clr-selection-color;
        color: $clr-black;
    }
}

@include exports('sidenav.clarity') {

    .sidenav {
        @include clr-getTypePropertiesForDomElement(sidenav_text, (line-height));

        max-width: baselineRem(13);
        min-width: baselineRem(9);
        width: $clr-sidenav-width;
        border-right: 1px solid $clr-sidenav-border-color;
        display: flex;
        flex-direction: column;

        .sidenav-content {
            flex: 1 1 auto;
            overflow: hidden;
            margin-bottom: $clr_baselineRem_1;

            &:hover {
                overflow-y: auto;
            }

            //nav link common styles
            .nav-link {
                display: inline-block;
                border-radius: $clr-default-borderradius 0 0 $clr-default-borderradius;
                color: inherit;
                cursor: pointer;
                text-decoration: none;
                width: 100%;
            }

            & > .nav-link {
                @include clr-getTypePropertiesForDomElement(sidenav_sectionHeader, (color, font-size, font-weight, line-height, font-family, letter-spacing));
                margin: $clr_baselineRem_1 0 0 $clr_baselineRem_1_25;
                padding-left: $clr_baselineRem_0_5;

                @include nav-link-colors();
            }
        }

        .nav-group {
            $clr-sidenav-fontsize: clr-getTypePropertyValueForDomElement(sidenav_text, font-size);

            @include clr-getTypePropertiesForDomElement(sidenav_text, (color, font-size, font-weight, letter-spacing));

            margin-top: $clr_baselineRem_1;
            width: 100%;

            .nav-list,
            label {
                padding: 0 0 0 $clr_baselineRem_1_75;
            }

            .nav-list {
                list-style: none;
                margin-top: 0;
                overflow: hidden;

                $navlink-padding: 4px;

                .nav-link {
                    line-height: $clr-sidenav-fontsize + 2; // need a little extra to handle descenders
                    padding: $navlink-padding 0 $navlink-padding $clr_baselineRem_0_5;

                    @include nav-link-colors();
                }
            }

            label {
                @include clr-getTypePropertiesForDomElement(sidenav_sectionHeader, (color, font-size, font-weight, line-height, font-family, letter-spacing));
            }

            input[type="checkbox"] {
                display: none;
            }
        }

        .collapsible {
            $clr-sidenav-caret-xOffset: baselineRem(8/24);
            $clr-sidenav-caret-yOffset: baselineRem(7/24);
            $clr-sidenav-caret-label-padding: baselineRem(32/24);

            label {
                cursor: pointer;
                display: inline-block;
                width: 100%;
                padding: 0 0 0 $clr-sidenav-caret-label-padding;

                &:after {
                    content: '';
                    float: left;
                    height: $clr-dropdown-caret-icon-dimension;
                    width: $clr-dropdown-caret-icon-dimension;
                    transform: translateX(-1 * $clr-sidenav-caret-xOffset) translateY($clr-sidenav-caret-yOffset);
                    background-image: generateCaretIcon();
                    @include icon-background-styles();
                    margin: 0;
                }
            }

            .nav-list, ul {
                overflow: hidden;
            }

            input[type="checkbox"]:checked ~ .nav-list, input[type="checkbox"]:checked ~ ul {
                height: 0;
            }

            input[type="checkbox"] ~ .nav-list, input[type="checkbox"] ~ ul {
                height: auto;
            }

            input[type="checkbox"]:checked ~ label:after {
                transform: rotate(-90deg) translateX(-1 * $clr-sidenav-caret-yOffset) translateY(-1 * $clr-sidenav-caret-xOffset);
            }
        }
    }
}
