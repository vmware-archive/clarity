// Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.
// This software is released under MIT license.
// The full license information can be found in LICENSE in the root directory of this project.

$clr-baseline-px: 24px !default;
$clr-baseline-int: $clr-baseline-px / 1px;

// TODO: deprecated
$clr-baseline: 1rem !default;

// TODO: deprecated
@function baselineRem($remSize) {
    // @warn 'baselineRem() and $clr_baselineRem variables are deprecated. Please change units to rem.';
    @return $remSize * 1rem;
}

// TODO: this exists because we need to compute 1px equivalents in themes on some values that
// cannot use calc() in IE11. 
$clr-rem-1px: 1/$clr-baseline-int * 1rem;

// TODO: deprecated
//BaselineRem Variables
$clr_baselineRem_0_1: baselineRem(0.1);
$clr_baselineRem_0_125: baselineRem(0.125);
$clr_baselineRem_0_2: baselineRem(0.2);
$clr_baselineRem_0_25: baselineRem(0.25);
$clr_baselineRem_0_3: baselineRem(0.3);
$clr_baselineRem_0_375: baselineRem(0.375);
$clr_baselineRem_0_5: baselineRem(0.5);
$clr_baselineRem_0_72: baselineRem(0.72);
$clr_baselineRem_0_75: baselineRem(0.75);
$clr_baselineRem_1: baselineRem(1);
$clr_baselineRem_1_25: baselineRem(1.25);
$clr_baselineRem_1_5: baselineRem(1.5);
$clr_baselineRem_1_75: baselineRem(1.75);
$clr_baselineRem_2: baselineRem(2);
$clr_baselineRem_2_5: baselineRem(2.5);
$clr_baselineRem_3: baselineRem(3);
$clr_baselineRem_3_5: baselineRem(3.5);
$clr_baselineRem_4: baselineRem(4);
$clr_baselineRem_5: baselineRem(5);
$clr_baselineRem_6: baselineRem(6);

//Typography

//0. Breakpoints
$clr-breakpoints: (
    small : 544px,
    medium: 768px,
    large : 992px,
    xlarge: 1200px
) !default;

//1. Fonts Options
$clr-font: Metropolis, 'Avenir Next', 'Helvetica Neue', Arial, sans-serif !default; //Default font stack for Clarity
$clr-altFont: $clr-font !default; //TODO: TBD. Alternative font for Clarity
$clr-monoFont: Consolas, Monaco, Courier, monospace !default;

// TODO: deprecated <= convert this section to use rem or remove it...
$clr-font-base-size: 14 !default;
$clr-font-size: unquote($clr-font-base-size+'px') !default;
$clr-rem-denominator: $clr-font-base-size !default;

$clr-kerning-lotsatext: normal !default; // 14px, but a lot of it
$clr-kerning-smalltext: normal !default; // 14px-12px
$clr-kerning-bigtext: 0.01em !default; // some types of 16px over dark background
$clr-kerning-tinytext: 0.03em !default; // 11px and lower

// TODO: deprecated
// WARNING: THIS FUNCTION ASSUMES rem IS 14PX!!!
@function rem($remSize) {
    @warn 'rem() is deprecated. Please change units to rem.';
    @return $remSize * $clr-font-base-size * 1px;
};

$clr-font-weights: (
    light: 200,
    regular: 400,
    semibold: 500,
    bold: 600
) !default;

//2. Headers
// NOTE: one day we may support responsive resizing of fonts. that day is not today, however.

$clr-typography-commonmap-key: "clr-common";
$clr-typography-lightfont: map-get($clr-font-weights,light);
$clr-typography-regfont: map-get($clr-font-weights,regular);
$clr-typography-sboldfont: map-get($clr-font-weights,semibold);
$clr-typography-boldfont: map-get($clr-font-weights,bold);

$clr-h1:(
  clr-common: (
    color: $clr-black,
    font-weight: $clr-typography-lightfont,
    font-family: $clr-altFont,
    font-size: 1.333333rem,
    letter-spacing: normal,
    line-height: 2rem,
    margin-top: 1rem,
    margin-bottom: 0
  ),
  small:(),
  medium:(),
  large:(),
  xlarge:()
);

$clr-h2:(
  clr-common: (
    color: $clr-black,
    font-weight: $clr-typography-lightfont,
    font-family: $clr-altFont,
    font-size: 1.166667rem,
    letter-spacing: normal,
    line-height: 2rem,
    margin-top: 1rem,
    margin-bottom: 0
  ),
  small:(),
  medium:(),
  large:(),
  xlarge:()
);

$clr-h3:(
  clr-common: (
    color: $clr-black,
    font-weight: $clr-typography-lightfont,
    font-family: $clr-altFont,
    font-size: 0.916667rem,
    letter-spacing: normal,
    line-height: 1rem,
    margin-top: 1rem,
    margin-bottom: 0
  ),
  small:(),
  medium:(),
  large:(),
  xlarge:()
);

$clr-h4:(
  clr-common: (
    color: $clr-black,
    font-weight: $clr-typography-lightfont,
    font-family: $clr-altFont,
    font-size: 0.75rem,
    letter-spacing: normal,
    line-height: 1rem,
    margin-top: 1rem,
    margin-bottom: 0
  ),
  small:(),
  medium:(),
  large:(),
  xlarge:()
);

$clr-h5:(
  clr-common: (
    font-weight: $clr-typography-regfont,
    font-family: $clr-altFont,
    font-size: 0.666667rem,
    letter-spacing: $clr-kerning-bigtext,
    line-height: 1rem,
    margin-top: 1rem,
    margin-bottom: 0
  ),
  small:(),
  medium:(),
  large:(),
  xlarge:()
);

$clr-h6:(
  clr-common: (
    font-weight: $clr-typography-sboldfont,
    font-family: $clr-altFont,
    font-size: 0.583333rem,
    letter-spacing: $clr-kerning-smalltext,
    line-height: 1rem,
    margin-top: 1rem,
    margin-bottom: 0,
    color: $clr-near-black
  ),
  small:(),
  medium:(),
  large:(),
  xlarge:()
);


//3. Paragraphs
$clr-typography-smalltext: 0.541667rem !default; // 13px
$clr-typography-xsmalltext: 0.5rem !default; // 12px
$clr-typography-xxsmalltext: 0.458333rem !default; // 11px
$clr-typography-tinytext: 0.416667rem !default; // 10px

// keeping this here as an easter egg. we use it on the website and it's not hurting anything. usage = intro text
$clr-p0: (
  clr-common: (
    font-weight: $clr-typography-lightfont,
    font-size: 0.833333rem,
    letter-spacing: normal,
    line-height: 1rem,
    margin-top: 1rem,
    margin-bottom: 0
  ),
  small:(),
  medium:(),
  large:(),
  xlarge:()
);

$clr-p1: (
  clr-common: (
    font-weight: $clr-typography-regfont,
    font-size: 0.583333rem,
    letter-spacing: $clr-kerning-lotsatext,
    line-height: 1rem,
    margin-top: 1rem,
    margin-bottom: 0
  ),
  small:(),
  medium:(),
  large:(),
  xlarge:()
);

$clr-p2: (
  clr-common: (
    font-weight: $clr-typography-sboldfont,
    font-size: $clr-typography-smalltext,
    letter-spacing: $clr-kerning-smalltext,
    line-height: 1rem,
    margin-top: 1rem,
    margin-bottom: 0
  ),
  small:(),
  medium:(),
  large:(),
  xlarge:()
);

$clr-p3: (
  clr-common: (
    font-weight: $clr-typography-regfont,
    font-size: $clr-typography-smalltext,
    letter-spacing: $clr-kerning-smalltext,
    line-height: 1rem,
    margin-top: 1rem,
    margin-bottom: 0
  ),
  small:(),
  medium:(),
  large:(),
  xlarge:()
);

$clr-p4: (
  clr-common: (
    font-weight: $clr-typography-boldfont,
    font-size: $clr-typography-xsmalltext,
    letter-spacing: $clr-kerning-smalltext,
    line-height: 1rem,
    margin-top: 1rem,
    margin-bottom: 0
  ),
  small:(),
  medium:(),
  large:(),
  xlarge:()
);

$clr-p5: (
  clr-common: (
    font-weight: $clr-typography-regfont,
    font-size: $clr-typography-xsmalltext,
    letter-spacing: $clr-kerning-smalltext,
    line-height: 1rem,
    margin-top: 1rem,
    margin-bottom: 0
  ),
  small:(),
  medium:(),
  large:(),
  xlarge:()
);

$clr-p6: (
  clr-common: (
    font-weight: $clr-typography-boldfont,
    font-size: $clr-typography-xxsmalltext,
    letter-spacing: $clr-kerning-tinytext,
    line-height: 0.5rem,
    margin-top: 1rem,
    margin-bottom: 0
  ),
  small:(),
  medium:(),
  large:(),
  xlarge:()
);

$clr-p7: (
  clr-common: (
    font-weight: $clr-typography-regfont,
    font-size: $clr-typography-xxsmalltext,
    letter-spacing: $clr-kerning-tinytext,
    line-height: 0.5rem,
    margin-top: 1rem,
    margin-bottom: 0
  ),
  small:(),
  medium:(),
  large:(),
  xlarge:()
);

$clr-p8: (
  clr-common: (
    font-weight: $clr-typography-regfont,
    font-size: $clr-typography-tinytext,
    letter-spacing: $clr-kerning-tinytext,
    line-height: 0.5rem,
    margin-top: 1rem,
    margin-bottom: 0
  ),
  small:(),
  medium:(),
  large:(),
  xlarge:()
);

//Element Properties Map
$clr-elements: (
  h1: $clr-h1,
  h2: $clr-h2,
  h3: $clr-h3,
  h4: $clr-h4,
  h5: $clr-h5,
  h6: $clr-h6,
  p0: $clr-p0,
  p1: $clr-p1,
  p2: $clr-p2,
  p3: $clr-p3,
  p4: $clr-p4,
  p5: $clr-p5,
  p6: $clr-p6,
  p7: $clr-p7,
  p8: $clr-p8
);

// DOM-Properties map
$clr-typography-dom-to-type-element: (
    alert-small_text: p4,
    alert_text: p3,
    card_link: p6,
    card_text: p1,
    card_title: h4,
    datagrid_placeholder: h5,
    datagrid_column_toggle_title: h5,
    dropdown_text: p1,
    dropdown_header: p4,
    form_block_label: h5,
    form_group_fields: p3,
    label_text: p7,
    login_productName: h1,
    login_subtitle: h3,
    login_trademark: h2,
    modal_header: h3,
    nav_title: h5,
    page_introParagraph: h5,
    page_bodyText: p1,
    page_mainHeading: h2,
    page_secondaryHeading: h3,
    page_sectionHeader: h5,
    page_tertiaryHeading: h4,
    sidenav_sectionHeader: h6,
    sidenav_text: p1,
    stackview_header: p2,
    stackview_text: p3,
    tab_text: p1,
    table_header: p6,
    table_text: p3,
    toc_header: h6,
    toc_text: p1,
    tooltip_text: p3,
    vertical_nav_header: p4
);

//4. Navigation
$clr-sidenav-width: 18% !default;
$clr-header-height: 2.5rem !default;
$clr-subnav-height: 1.5rem !default;

//5.Content Area Paddings
$clr-content-area-padding-top: 1rem !default;
$clr-content-area-padding-right: 1rem !default;
$clr-content-area-padding-bottom: 1rem !default;
$clr-content-area-padding-left: 1rem !default;

//6. Cards
$clr-card-outer-margin: 0.75rem !default;
$clr-card-inner-margin: 0.5rem !default;

//7. Modal
$clr-modal-content-padding-top: 1rem !default;
$clr-modal-content-padding-right: 1rem !default;
$clr-modal-content-padding-bottom: 1rem !default;
$clr-modal-content-padding-left: 1rem !default;

//8. Colors
//TODO: Refactor colors across clarity to use these variables so that there
//is only one lookup per color. Create additional color variables here if needed
$gray-lightest: clr-getColor(lightest);
$gray-lighter: clr-getColor(lighter);
$gray-light: clr-getColor(light);
$gray-light-midtone: clr-getColor(light-midtone);
$gray-dark-midtone: clr-getColor(dark-midtone);
$gray-dark: clr-getColor(dark);
$gray-darker: clr-getColor(darker);
$gray-darkest: clr-getColor(darkest);

$action-blues-lightest: clr-getColor(lightest,action-blues);
$action-blues-lighter: clr-getColor(lighter,action-blues);
$action-blues-light: clr-getColor(light,action-blues);
$action-blues-light-midtone: clr-getColor(light-midtone,action-blues);
$action-blues-dark-midtone: clr-getColor(dark-midtone,action-blues);
$action-blues-dark: clr-getColor(dark,action-blues);
$action-blues-darker: clr-getColor(darker,action-blues);
$action-blues-darkest: clr-getColor(darkest,action-blues);

$reds-lightest: clr-getColor(lightest,reds);
$reds-lighter: clr-getColor(lighter,reds);
$reds-light: clr-getColor(light,reds);
$reds-light-midtone: clr-getColor(light-midtone,reds);
$reds-dark-midtone: clr-getColor(dark-midtone,reds);
$reds-dark: clr-getColor(dark,reds);
$reds-darker: clr-getColor(darker,reds);
$reds-darkest: clr-getColor(darkest,reds);

$greens-lightest: clr-getColor(lightest,greens);
$greens-lighter: clr-getColor(lighter,greens);
$greens-light: clr-getColor(light,greens);
$greens-light-midtone: clr-getColor(light-midtone,greens);
$greens-dark-midtone: clr-getColor(dark-midtone,greens);
$greens-dark: clr-getColor(dark,greens);
$greens-darker: clr-getColor(darker,greens);
$greens-darkest: clr-getColor(darkest,greens);

$action-purples-lightest: clr-getColor(lightest,action-purples);
$action-purples-lighter: clr-getColor(lighter,action-purples);
$action-purples-light: clr-getColor(light,action-purples);
$action-purples-light-midtone: clr-getColor(light-midtone,action-purples);
$action-purples-dark-midtone: clr-getColor(dark-midtone,action-purples);
$action-purples-dark: clr-getColor(dark,action-purples);
$action-purples-darker: clr-getColor(darker,action-purples);
$action-purples-darkest: clr-getColor(darkest,action-purples);

$yellows-lightest: clr-getColor(lightest,yellows);
$yellows-lighter: clr-getColor(lighter,yellows);
$yellows-light: clr-getColor(light,yellows);
$yellows-light-midtone: clr-getColor(light-midtone,yellows);
$yellows-dark-midtone: clr-getColor(dark-midtone,yellows);
$yellows-dark: clr-getColor(dark,yellows);
$yellows-darker: clr-getColor(darker,yellows);
$yellows-darkest: clr-getColor(darkest,yellows);

//Other Colors
//TODO: Add these to the color palette
$clr-links-visited-color: #5659b9 !default;
$clr-custom-links-hover-color: $gray-light !default;
$clr-selection-color: #D9E4EA !default;

// 9. Misc
$clr-default-borderradius: 0.125rem !default;
$clr-default-borderwidth: 1px !default;

//10. Buttons
$clr-button-vertical-margin: 0.25rem !default;
$clr-button-horizontal-margin: 0.5rem !default;
$clr-button-horizontal-padding: 0.5rem !default;
$clr-button-height: 1.5rem !default;
$clr-button-height-sm: 1rem !default;
$clr-button-padding: 0 $clr-button-horizontal-padding !default;

//11. Icons
$clr-icon-dimension-sm: 0.666667rem !default;
$clr-alert-icon-dimension-sm: 0.75rem !default;

//12. Dropdowns Caret Icon
$clr-dropdown-caret-icon-dimension: 0.416667rem;
$clr-dropdown-caret-left-margin: 0.083333rem;

//13. Outline Offset
$clr-outline-offset: -5px;

//BS4 overrides
$enable-flex: true;
$grid-gutter-width-base: 1rem;
$grid-gutter-widths: (
  xs: $grid-gutter-width-base,
  sm: $grid-gutter-width-base,
  md: $grid-gutter-width-base,
  lg: $grid-gutter-width-base,
  xl: $grid-gutter-width-base
);
